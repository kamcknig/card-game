/**
 * Removes elements from an array based on a predicate function.
 *
 * This function changes `arr` in place.
 * If you want to remove elements without modifying the original array, use `filter`.
 *
 * @template T
 * @param {T[]} arr - The array to modify.
 * @param {(value: T, index: number, array: T[]) => boolean} shouldRemoveElement - The function invoked per iteration to determine if an element should be removed.
 * @returns {T[]} The modified array with the specified elements removed.
 *
 * @example
 * const numbers = [1, 2, 3, 4, 5];
 * remove(numbers, (value) => value % 2 === 0);
 * console.log(numbers); // [1, 3, 5]
 */
export function remove<T>(arr: T[], shouldRemoveElement: (value: T, index: number, array: T[]) => boolean): T[] {
  const originalArr = arr.slice();
  const removed = [];

  let resultIndex = 0;

  for (let i = 0; i < arr.length; i++) {
    if (shouldRemoveElement(arr[i], i, originalArr)) {
      removed.push(arr[i]);

      continue;
    }

    // For handling sparse arrays
    if (!Object.hasOwn(arr, i)) {
      delete arr[resultIndex++];
      continue;
    }

    arr[resultIndex++] = arr[i];
  }

  arr.length = resultIndex;

  return removed;
}

// denoCacheMetadata={"headers":{"x-jsr-cache-status":"revalidated","x-content-type-options":"nosniff","last-modified":"Sun, 09 Mar 2025 08:39:35 GMT","server":"UploadServer","via":"1.1 google","x-goog-storage-class":"STANDARD","access-control-allow-origin":"*","x-guploader-uploadid":"ABgVH895LavnFN9BEqarjS758jOFnmL0lIbLwPrxqb6W-nUcR6gjGAKoJqTtLwS848QNTOUA","x-goog-stored-content-length":"1194","content-length":"1194","expires":"Fri, 26 Jun 2026 21:45:35 GMT","content-type":"text/typescript","age":"0","x-jsr-cache-id":"ATL","x-goog-metageneration":"1","date":"Thu, 26 Jun 2025 21:45:35 GMT","cache-control":"public, max-age=31536000, immutable","etag":"\"d3d6a249f793c1d1a57e4685d2f98e44\"","x-robots-tag":"noindex","access-control-expose-headers":"*","cross-origin-resource-policy":"cross-origin","x-goog-generation":"1741509575107384","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","x-goog-hash":"crc32c=TIqlxw==,md5=09aiSfeTwdGlfkaF0vmORA==","x-goog-stored-content-encoding":"identity","accept-ranges":"bytes","content-security-policy":"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';"},"url":"https://jsr.io/@es-toolkit/es-toolkit/1.33.0/src/array/remove.ts","time":1750974334}