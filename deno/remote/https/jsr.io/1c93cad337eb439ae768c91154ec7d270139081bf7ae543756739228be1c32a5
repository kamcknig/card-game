import { isArrayLike } from '../predicate/isArrayLike.ts';

/**
 * Finds the index of the last occurrence of a value in an array.
 *
 * This method is similar to `Array.prototype.lastIndexOf`, but it also finds `NaN` values.
 * It uses strict equality (`===`) to compare elements.
 *
 * @template T - The type of elements in the array.
 * @param {ArrayLike<T> | null | undefined} array - The array to search.
 * @param {T} searchElement - The value to search for.
 * @param {number} [fromIndex] - The index to start the search at.
 * @returns {number} The index (zero-based) of the last occurrence of the value in the array, or `-1` if the value is not found.
 *
 * @example
 * const array = [1, 2, 3, NaN, 1];
 * lastIndexOf(array, 3); // => 4
 * lastIndexOf(array, NaN); // => 3
 */
export function lastIndexOf<T>(array: ArrayLike<T> | null | undefined, searchElement: T, fromIndex?: number): number {
  if (!isArrayLike(array) || array.length === 0) {
    return -1;
  }

  const length = array.length;

  let index = fromIndex ?? length - 1;
  if (fromIndex != null) {
    index = index < 0 ? Math.max(length + index, 0) : Math.min(index, length - 1);
  }

  // `Array.prototype.lastIndexOf` doesn't find `NaN` values, so we need to handle that case separately.
  if (Number.isNaN(searchElement)) {
    for (let i = index; i >= 0; i--) {
      if (Number.isNaN(array[i])) {
        return i;
      }
    }
  }

  return Array.from(array).lastIndexOf(searchElement, index);
}

// denoCacheMetadata={"headers":{"x-goog-stored-content-encoding":"identity","content-length":"1479","cache-control":"public, max-age=31536000, immutable","expires":"Fri, 26 Jun 2026 21:45:35 GMT","content-type":"text/typescript","age":"0","etag":"\"9311e2d365ae8e3530255a0855922310\"","x-jsr-cache-id":"ATL","access-control-expose-headers":"*","x-goog-stored-content-length":"1479","x-guploader-uploadid":"ABgVH8_qotrEk8OcsbURrL3-HZcPSrYU1FPHqmO4C92Kzzje-f9Ey9DUXQYvhPfsmINkDsMeuhz305o","via":"1.1 google","accept-ranges":"bytes","cross-origin-resource-policy":"cross-origin","x-goog-metageneration":"1","server":"UploadServer","x-jsr-cache-status":"revalidated","x-goog-hash":"crc32c=x+gxPA==,md5=kxHi02WujjUwJVoIVZIjEA==","x-content-type-options":"nosniff","x-goog-storage-class":"STANDARD","last-modified":"Sun, 09 Mar 2025 08:39:35 GMT","x-goog-generation":"1741509575824152","date":"Thu, 26 Jun 2025 21:45:35 GMT","content-security-policy":"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","x-robots-tag":"noindex","access-control-allow-origin":"*"},"url":"https://jsr.io/@es-toolkit/es-toolkit/1.33.0/src/compat/array/lastIndexOf.ts","time":1750974334}