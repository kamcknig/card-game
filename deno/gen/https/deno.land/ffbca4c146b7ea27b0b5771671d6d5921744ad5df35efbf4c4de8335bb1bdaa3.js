export function addCorsHeaders(headers, opts, req) {
  addOrigin(opts, headers, req);
  addCredentials(opts, headers);
  addExposedHeaders(opts, headers);
  if (req.method === "OPTIONS") {
    addMethods(opts, headers);
    addAllowedHeaders(opts, headers, req);
    addMaxAge(opts, headers);
  }
}
function join(arg) {
  return Array.isArray(arg) ? arg.join(",") : arg;
}
function isOriginAllowed(allowedOrigin, origin) {
  if (Array.isArray(allowedOrigin)) {
    for(let i = 0; i < allowedOrigin.length; i++){
      if (isOriginAllowed(allowedOrigin[i], origin)) {
        return true;
      }
    }
    return false;
  } else if (typeof allowedOrigin === "string") {
    return allowedOrigin === origin;
  } else if (allowedOrigin instanceof RegExp) {
    return allowedOrigin.test(origin);
  } else {
    return !!allowedOrigin;
  }
}
function addOrigin(opts, headers, req) {
  const origin = req.headers.get("origin");
  const allowedOrigin = opts.origin;
  if (!allowedOrigin || allowedOrigin === "*") {
    headers.set("Access-Control-Allow-Origin", "*");
  } else if (typeof allowedOrigin === "string") {
    headers.set("Access-Control-Allow-Origin", allowedOrigin);
    headers.append("Vary", "Origin");
  } else {
    const isAllowed = isOriginAllowed(allowedOrigin, origin);
    headers.set("Access-Control-Allow-Origin", isAllowed ? origin : "false");
    headers.append("Vary", "Origin");
  }
}
function addMethods(opts, headers) {
  if (opts.methods) {
    headers.set("Access-Control-Allow-Methods", join(opts.methods));
  }
}
function addAllowedHeaders(opts, headers, req) {
  if (opts.allowedHeaders) {
    headers.set("Access-Control-Allow-Headers", join(opts.allowedHeaders));
    return;
  }
  const requestedHeaders = req.headers.get("access-control-request-headers");
  if (requestedHeaders) {
    headers.append("Vary", "Access-Control-Request-Headers");
    headers.set("Access-Control-Allow-Headers", requestedHeaders);
  }
}
function addExposedHeaders(opts, headers) {
  if (opts.exposedHeaders) {
    headers.set("Access-Control-Expose-Headers", join(opts.exposedHeaders));
  }
}
function addCredentials(opts, headers) {
  if (opts.credentials) {
    headers.set("Access-Control-Allow-Credentials", "true");
  }
}
function addMaxAge(opts, headers) {
  if (opts.maxAge) {
    headers.set("Access-Control-Max-Age", opts.maxAge.toString());
  }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vZGVuby5sYW5kL3gvc29ja2V0X2lvQDAuMi4xL3BhY2thZ2VzL2VuZ2luZS5pby9saWIvY29ycy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJ0eXBlIE9yaWdpbk9wdGlvbiA9IGJvb2xlYW4gfCBzdHJpbmcgfCBSZWdFeHAgfCAoc3RyaW5nIHwgUmVnRXhwKVtdO1xuXG5leHBvcnQgaW50ZXJmYWNlIENvcnNPcHRpb25zIHtcbiAgb3JpZ2luPzogT3JpZ2luT3B0aW9uO1xuICBtZXRob2RzPzogc3RyaW5nIHwgc3RyaW5nW107XG4gIGFsbG93ZWRIZWFkZXJzPzogc3RyaW5nIHwgc3RyaW5nW107XG4gIGV4cG9zZWRIZWFkZXJzPzogc3RyaW5nIHwgc3RyaW5nW107XG4gIGNyZWRlbnRpYWxzPzogYm9vbGVhbjtcbiAgbWF4QWdlPzogbnVtYmVyO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYWRkQ29yc0hlYWRlcnMoXG4gIGhlYWRlcnM6IEhlYWRlcnMsXG4gIG9wdHM6IENvcnNPcHRpb25zLFxuICByZXE6IFJlcXVlc3QsXG4pIHtcbiAgYWRkT3JpZ2luKG9wdHMsIGhlYWRlcnMsIHJlcSk7XG4gIGFkZENyZWRlbnRpYWxzKG9wdHMsIGhlYWRlcnMpO1xuICBhZGRFeHBvc2VkSGVhZGVycyhvcHRzLCBoZWFkZXJzKTtcblxuICBpZiAocmVxLm1ldGhvZCA9PT0gXCJPUFRJT05TXCIpIHtcbiAgICBhZGRNZXRob2RzKG9wdHMsIGhlYWRlcnMpO1xuICAgIGFkZEFsbG93ZWRIZWFkZXJzKG9wdHMsIGhlYWRlcnMsIHJlcSk7XG4gICAgYWRkTWF4QWdlKG9wdHMsIGhlYWRlcnMpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGpvaW4oYXJnOiBzdHJpbmcgfCBzdHJpbmdbXSkge1xuICByZXR1cm4gQXJyYXkuaXNBcnJheShhcmcpID8gYXJnLmpvaW4oXCIsXCIpIDogYXJnO1xufVxuXG5mdW5jdGlvbiBpc09yaWdpbkFsbG93ZWQoYWxsb3dlZE9yaWdpbjogT3JpZ2luT3B0aW9uLCBvcmlnaW46IHN0cmluZyk6IGJvb2xlYW4ge1xuICBpZiAoQXJyYXkuaXNBcnJheShhbGxvd2VkT3JpZ2luKSkge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYWxsb3dlZE9yaWdpbi5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKGlzT3JpZ2luQWxsb3dlZChhbGxvd2VkT3JpZ2luW2ldLCBvcmlnaW4pKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGFsbG93ZWRPcmlnaW4gPT09IFwic3RyaW5nXCIpIHtcbiAgICByZXR1cm4gYWxsb3dlZE9yaWdpbiA9PT0gb3JpZ2luO1xuICB9IGVsc2UgaWYgKGFsbG93ZWRPcmlnaW4gaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICByZXR1cm4gYWxsb3dlZE9yaWdpbi50ZXN0KG9yaWdpbik7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuICEhYWxsb3dlZE9yaWdpbjtcbiAgfVxufVxuXG5mdW5jdGlvbiBhZGRPcmlnaW4ob3B0czogQ29yc09wdGlvbnMsIGhlYWRlcnM6IEhlYWRlcnMsIHJlcTogUmVxdWVzdCkge1xuICBjb25zdCBvcmlnaW4gPSByZXEuaGVhZGVycy5nZXQoXCJvcmlnaW5cIikhO1xuICBjb25zdCBhbGxvd2VkT3JpZ2luID0gb3B0cy5vcmlnaW47XG5cbiAgaWYgKCFhbGxvd2VkT3JpZ2luIHx8IGFsbG93ZWRPcmlnaW4gPT09IFwiKlwiKSB7XG4gICAgaGVhZGVycy5zZXQoXCJBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW5cIiwgXCIqXCIpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBhbGxvd2VkT3JpZ2luID09PSBcInN0cmluZ1wiKSB7XG4gICAgaGVhZGVycy5zZXQoXCJBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW5cIiwgYWxsb3dlZE9yaWdpbik7XG4gICAgaGVhZGVycy5hcHBlbmQoXCJWYXJ5XCIsIFwiT3JpZ2luXCIpO1xuICB9IGVsc2Uge1xuICAgIGNvbnN0IGlzQWxsb3dlZCA9IGlzT3JpZ2luQWxsb3dlZChhbGxvd2VkT3JpZ2luLCBvcmlnaW4pO1xuICAgIGhlYWRlcnMuc2V0KFwiQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luXCIsIGlzQWxsb3dlZCA/IG9yaWdpbiA6IFwiZmFsc2VcIik7XG4gICAgaGVhZGVycy5hcHBlbmQoXCJWYXJ5XCIsIFwiT3JpZ2luXCIpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGFkZE1ldGhvZHMob3B0czogQ29yc09wdGlvbnMsIGhlYWRlcnM6IEhlYWRlcnMpIHtcbiAgaWYgKG9wdHMubWV0aG9kcykge1xuICAgIGhlYWRlcnMuc2V0KFwiQWNjZXNzLUNvbnRyb2wtQWxsb3ctTWV0aG9kc1wiLCBqb2luKG9wdHMubWV0aG9kcykpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGFkZEFsbG93ZWRIZWFkZXJzKG9wdHM6IENvcnNPcHRpb25zLCBoZWFkZXJzOiBIZWFkZXJzLCByZXE6IFJlcXVlc3QpIHtcbiAgaWYgKG9wdHMuYWxsb3dlZEhlYWRlcnMpIHtcbiAgICBoZWFkZXJzLnNldChcIkFjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnNcIiwgam9pbihvcHRzLmFsbG93ZWRIZWFkZXJzKSk7XG4gICAgcmV0dXJuO1xuICB9XG4gIGNvbnN0IHJlcXVlc3RlZEhlYWRlcnMgPSByZXEuaGVhZGVycy5nZXQoXCJhY2Nlc3MtY29udHJvbC1yZXF1ZXN0LWhlYWRlcnNcIik7XG4gIGlmIChyZXF1ZXN0ZWRIZWFkZXJzKSB7XG4gICAgaGVhZGVycy5hcHBlbmQoXCJWYXJ5XCIsIFwiQWNjZXNzLUNvbnRyb2wtUmVxdWVzdC1IZWFkZXJzXCIpO1xuICAgIGhlYWRlcnMuc2V0KFwiQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVyc1wiLCByZXF1ZXN0ZWRIZWFkZXJzKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBhZGRFeHBvc2VkSGVhZGVycyhvcHRzOiBDb3JzT3B0aW9ucywgaGVhZGVyczogSGVhZGVycykge1xuICBpZiAob3B0cy5leHBvc2VkSGVhZGVycykge1xuICAgIGhlYWRlcnMuc2V0KFwiQWNjZXNzLUNvbnRyb2wtRXhwb3NlLUhlYWRlcnNcIiwgam9pbihvcHRzLmV4cG9zZWRIZWFkZXJzKSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gYWRkQ3JlZGVudGlhbHMob3B0czogQ29yc09wdGlvbnMsIGhlYWRlcnM6IEhlYWRlcnMpIHtcbiAgaWYgKG9wdHMuY3JlZGVudGlhbHMpIHtcbiAgICBoZWFkZXJzLnNldChcIkFjY2Vzcy1Db250cm9sLUFsbG93LUNyZWRlbnRpYWxzXCIsIFwidHJ1ZVwiKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBhZGRNYXhBZ2Uob3B0czogQ29yc09wdGlvbnMsIGhlYWRlcnM6IEhlYWRlcnMpIHtcbiAgaWYgKG9wdHMubWF4QWdlKSB7XG4gICAgaGVhZGVycy5zZXQoXCJBY2Nlc3MtQ29udHJvbC1NYXgtQWdlXCIsIG9wdHMubWF4QWdlLnRvU3RyaW5nKCkpO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBV0EsT0FBTyxTQUFTLGVBQ2QsT0FBZ0IsRUFDaEIsSUFBaUIsRUFDakIsR0FBWTtFQUVaLFVBQVUsTUFBTSxTQUFTO0VBQ3pCLGVBQWUsTUFBTTtFQUNyQixrQkFBa0IsTUFBTTtFQUV4QixJQUFJLElBQUksTUFBTSxLQUFLLFdBQVc7SUFDNUIsV0FBVyxNQUFNO0lBQ2pCLGtCQUFrQixNQUFNLFNBQVM7SUFDakMsVUFBVSxNQUFNO0VBQ2xCO0FBQ0Y7QUFFQSxTQUFTLEtBQUssR0FBc0I7RUFDbEMsT0FBTyxNQUFNLE9BQU8sQ0FBQyxPQUFPLElBQUksSUFBSSxDQUFDLE9BQU87QUFDOUM7QUFFQSxTQUFTLGdCQUFnQixhQUEyQixFQUFFLE1BQWM7RUFDbEUsSUFBSSxNQUFNLE9BQU8sQ0FBQyxnQkFBZ0I7SUFDaEMsSUFBSyxJQUFJLElBQUksR0FBRyxJQUFJLGNBQWMsTUFBTSxFQUFFLElBQUs7TUFDN0MsSUFBSSxnQkFBZ0IsYUFBYSxDQUFDLEVBQUUsRUFBRSxTQUFTO1FBQzdDLE9BQU87TUFDVDtJQUNGO0lBQ0EsT0FBTztFQUNULE9BQU8sSUFBSSxPQUFPLGtCQUFrQixVQUFVO0lBQzVDLE9BQU8sa0JBQWtCO0VBQzNCLE9BQU8sSUFBSSx5QkFBeUIsUUFBUTtJQUMxQyxPQUFPLGNBQWMsSUFBSSxDQUFDO0VBQzVCLE9BQU87SUFDTCxPQUFPLENBQUMsQ0FBQztFQUNYO0FBQ0Y7QUFFQSxTQUFTLFVBQVUsSUFBaUIsRUFBRSxPQUFnQixFQUFFLEdBQVk7RUFDbEUsTUFBTSxTQUFTLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQztFQUMvQixNQUFNLGdCQUFnQixLQUFLLE1BQU07RUFFakMsSUFBSSxDQUFDLGlCQUFpQixrQkFBa0IsS0FBSztJQUMzQyxRQUFRLEdBQUcsQ0FBQywrQkFBK0I7RUFDN0MsT0FBTyxJQUFJLE9BQU8sa0JBQWtCLFVBQVU7SUFDNUMsUUFBUSxHQUFHLENBQUMsK0JBQStCO0lBQzNDLFFBQVEsTUFBTSxDQUFDLFFBQVE7RUFDekIsT0FBTztJQUNMLE1BQU0sWUFBWSxnQkFBZ0IsZUFBZTtJQUNqRCxRQUFRLEdBQUcsQ0FBQywrQkFBK0IsWUFBWSxTQUFTO0lBQ2hFLFFBQVEsTUFBTSxDQUFDLFFBQVE7RUFDekI7QUFDRjtBQUVBLFNBQVMsV0FBVyxJQUFpQixFQUFFLE9BQWdCO0VBQ3JELElBQUksS0FBSyxPQUFPLEVBQUU7SUFDaEIsUUFBUSxHQUFHLENBQUMsZ0NBQWdDLEtBQUssS0FBSyxPQUFPO0VBQy9EO0FBQ0Y7QUFFQSxTQUFTLGtCQUFrQixJQUFpQixFQUFFLE9BQWdCLEVBQUUsR0FBWTtFQUMxRSxJQUFJLEtBQUssY0FBYyxFQUFFO0lBQ3ZCLFFBQVEsR0FBRyxDQUFDLGdDQUFnQyxLQUFLLEtBQUssY0FBYztJQUNwRTtFQUNGO0VBQ0EsTUFBTSxtQkFBbUIsSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDO0VBQ3pDLElBQUksa0JBQWtCO0lBQ3BCLFFBQVEsTUFBTSxDQUFDLFFBQVE7SUFDdkIsUUFBUSxHQUFHLENBQUMsZ0NBQWdDO0VBQzlDO0FBQ0Y7QUFFQSxTQUFTLGtCQUFrQixJQUFpQixFQUFFLE9BQWdCO0VBQzVELElBQUksS0FBSyxjQUFjLEVBQUU7SUFDdkIsUUFBUSxHQUFHLENBQUMsaUNBQWlDLEtBQUssS0FBSyxjQUFjO0VBQ3ZFO0FBQ0Y7QUFFQSxTQUFTLGVBQWUsSUFBaUIsRUFBRSxPQUFnQjtFQUN6RCxJQUFJLEtBQUssV0FBVyxFQUFFO0lBQ3BCLFFBQVEsR0FBRyxDQUFDLG9DQUFvQztFQUNsRDtBQUNGO0FBRUEsU0FBUyxVQUFVLElBQWlCLEVBQUUsT0FBZ0I7RUFDcEQsSUFBSSxLQUFLLE1BQU0sRUFBRTtJQUNmLFFBQVEsR0FBRyxDQUFDLDBCQUEwQixLQUFLLE1BQU0sQ0FBQyxRQUFRO0VBQzVEO0FBQ0YifQ==
// denoCacheMetadata=2287142692032733473,8112410278376657224