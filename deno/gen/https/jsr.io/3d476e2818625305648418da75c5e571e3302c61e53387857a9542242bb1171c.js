import { delay as delayToolkit } from '../promise/index.ts';
const DEFAULT_DELAY = 0;
const DEFAULT_RETRIES = Number.POSITIVE_INFINITY;
/**
 * Retries a function that returns a promise with specified options.
 *
 * @template T
 * @param {() => Promise<T>} func - The function to retry. It should return a promise.
 * @param {number | RetryOptions} [_options] - Either the number of retries or an options object.
 * @returns {Promise<T>} A promise that resolves with the value of the successful function call.
 */ export async function retry(func, _options) {
  let delay;
  let retries;
  let signal;
  if (typeof _options === 'number') {
    delay = DEFAULT_DELAY;
    retries = _options;
    signal = undefined;
  } else {
    delay = _options?.delay ?? DEFAULT_DELAY;
    retries = _options?.retries ?? DEFAULT_RETRIES;
    signal = _options?.signal;
  }
  let error;
  for(let i = 0; i < retries; i++){
    if (signal?.aborted) {
      throw error ?? new Error(`The retry operation was aborted due to an abort signal.`);
    }
    try {
      return await func();
    } catch (err) {
      error = err;
      await delayToolkit(delay);
    }
  }
  throw error;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vanNyLmlvL0Blcy10b29sa2l0L2VzLXRvb2xraXQvMS4zMy4wL3NyYy9mdW5jdGlvbi9yZXRyeS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWxheSBhcyBkZWxheVRvb2xraXQgfSBmcm9tICcuLi9wcm9taXNlL2luZGV4LnRzJztcblxuaW50ZXJmYWNlIFJldHJ5T3B0aW9ucyB7XG4gIC8qKlxuICAgKiBUaGUgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyB0byBpbnRlcnZhbCBkZWxheS5cbiAgICogQGRlZmF1bHQgMFxuICAgKi9cbiAgZGVsYXk/OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFRoZSBudW1iZXIgb2YgcmV0cmllcyB0byBhdHRlbXB0LlxuICAgKiBAZGVmYXVsdCBOdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFlcbiAgICovXG4gIHJldHJpZXM/OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIEFuIEFib3J0U2lnbmFsIHRvIGNhbmNlbCB0aGUgcmV0cnkgb3BlcmF0aW9uLlxuICAgKi9cbiAgc2lnbmFsPzogQWJvcnRTaWduYWw7XG59XG5cbmNvbnN0IERFRkFVTFRfREVMQVkgPSAwO1xuY29uc3QgREVGQVVMVF9SRVRSSUVTID0gTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZO1xuXG4vKipcbiAqIFJldHJpZXMgYSBmdW5jdGlvbiB0aGF0IHJldHVybnMgYSBwcm9taXNlIHVudGlsIGl0IHJlc29sdmVzIHN1Y2Nlc3NmdWxseS5cbiAqXG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHsoKSA9PiBQcm9taXNlPFQ+fSBmdW5jIC0gVGhlIGZ1bmN0aW9uIHRvIHJldHJ5LlxuICogQHJldHVybnMge1Byb21pc2U8VD59IEEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggdGhlIHZhbHVlIG9mIHRoZSBzdWNjZXNzZnVsIGZ1bmN0aW9uIGNhbGwuXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIEJhc2ljIHVzYWdlIHdpdGggZGVmYXVsdCByZXRyeSBvcHRpb25zXG4gKiByZXRyeSgoKSA9PiBmZXRjaERhdGEoKSkudGhlbihkYXRhID0+IGNvbnNvbGUubG9nKGRhdGEpKTtcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJldHJ5PFQ+KGZ1bmM6ICgpID0+IFByb21pc2U8VD4pOiBQcm9taXNlPFQ+O1xuXG4vKipcbiAqIFJldHJpZXMgYSBmdW5jdGlvbiB0aGF0IHJldHVybnMgYSBwcm9taXNlIGEgc3BlY2lmaWVkIG51bWJlciBvZiB0aW1lcy5cbiAqXG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHsoKSA9PiBQcm9taXNlPFQ+fSBmdW5jIC0gVGhlIGZ1bmN0aW9uIHRvIHJldHJ5LiBJdCBzaG91bGQgcmV0dXJuIGEgcHJvbWlzZS5cbiAqIEBwYXJhbSB7bnVtYmVyfSByZXRyaWVzIC0gVGhlIG51bWJlciBvZiByZXRyaWVzIHRvIGF0dGVtcHQuIERlZmF1bHQgaXMgSW5maW5pdHkuXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxUPn0gQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCB0aGUgdmFsdWUgb2YgdGhlIHN1Y2Nlc3NmdWwgZnVuY3Rpb24gY2FsbC5cbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gUmV0cnkgYSBmdW5jdGlvbiB1cCB0byAzIHRpbWVzXG4gKiByZXRyeSgoKSA9PiBmZXRjaERhdGEoKSwgMykudGhlbihkYXRhID0+IGNvbnNvbGUubG9nKGRhdGEpKTtcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJldHJ5PFQ+KGZ1bmM6ICgpID0+IFByb21pc2U8VD4sIHJldHJpZXM6IG51bWJlcik6IFByb21pc2U8VD47XG5cbi8qKlxuICogUmV0cmllcyBhIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhIHByb21pc2Ugd2l0aCBzcGVjaWZpZWQgb3B0aW9ucy5cbiAqXG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHsoKSA9PiBQcm9taXNlPFQ+fSBmdW5jIC0gVGhlIGZ1bmN0aW9uIHRvIHJldHJ5LiBJdCBzaG91bGQgcmV0dXJuIGEgcHJvbWlzZS5cbiAqIEBwYXJhbSB7UmV0cnlPcHRpb25zfSBvcHRpb25zIC0gT3B0aW9ucyB0byBjb25maWd1cmUgdGhlIHJldHJ5IGJlaGF2aW9yLlxuICogQHBhcmFtIHtudW1iZXJ9IFtvcHRpb25zLmRlbGF5PTBdIC0gVGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgdG8gd2FpdCBiZXR3ZWVuIHJldHJpZXMuXG4gKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMucmV0cmllcz1JbmZpbml0eV0gLSBUaGUgbnVtYmVyIG9mIHJldHJpZXMgdG8gYXR0ZW1wdC5cbiAqIEBwYXJhbSB7QWJvcnRTaWduYWx9IFtvcHRpb25zLnNpZ25hbF0gLSBBbiBBYm9ydFNpZ25hbCB0byBjYW5jZWwgdGhlIHJldHJ5IG9wZXJhdGlvbi5cbiAqIEByZXR1cm5zIHtQcm9taXNlPFQ+fSBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIHRoZSB2YWx1ZSBvZiB0aGUgc3VjY2Vzc2Z1bCBmdW5jdGlvbiBjYWxsLlxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBSZXRyeSBhIGZ1bmN0aW9uIHdpdGggYSBkZWxheSBvZiAxMDAwbXMgYmV0d2VlbiBhdHRlbXB0c1xuICogcmV0cnkoKCkgPT4gZmV0Y2hEYXRhKCksIHsgZGVsYXk6IDEwMDAsIHRpbWVzOiA1IH0pLnRoZW4oZGF0YSA9PiBjb25zb2xlLmxvZyhkYXRhKSk7XG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiByZXRyeTxUPihmdW5jOiAoKSA9PiBQcm9taXNlPFQ+LCBvcHRpb25zOiBSZXRyeU9wdGlvbnMpOiBQcm9taXNlPFQ+O1xuXG4vKipcbiAqIFJldHJpZXMgYSBmdW5jdGlvbiB0aGF0IHJldHVybnMgYSBwcm9taXNlIHdpdGggc3BlY2lmaWVkIG9wdGlvbnMuXG4gKlxuICogQHRlbXBsYXRlIFRcbiAqIEBwYXJhbSB7KCkgPT4gUHJvbWlzZTxUPn0gZnVuYyAtIFRoZSBmdW5jdGlvbiB0byByZXRyeS4gSXQgc2hvdWxkIHJldHVybiBhIHByb21pc2UuXG4gKiBAcGFyYW0ge251bWJlciB8IFJldHJ5T3B0aW9uc30gW19vcHRpb25zXSAtIEVpdGhlciB0aGUgbnVtYmVyIG9mIHJldHJpZXMgb3IgYW4gb3B0aW9ucyBvYmplY3QuXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxUPn0gQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCB0aGUgdmFsdWUgb2YgdGhlIHN1Y2Nlc3NmdWwgZnVuY3Rpb24gY2FsbC5cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJldHJ5PFQ+KGZ1bmM6ICgpID0+IFByb21pc2U8VD4sIF9vcHRpb25zPzogbnVtYmVyIHwgUmV0cnlPcHRpb25zKTogUHJvbWlzZTxUPiB7XG4gIGxldCBkZWxheTogbnVtYmVyO1xuICBsZXQgcmV0cmllczogbnVtYmVyO1xuICBsZXQgc2lnbmFsOiBBYm9ydFNpZ25hbCB8IHVuZGVmaW5lZDtcblxuICBpZiAodHlwZW9mIF9vcHRpb25zID09PSAnbnVtYmVyJykge1xuICAgIGRlbGF5ID0gREVGQVVMVF9ERUxBWTtcbiAgICByZXRyaWVzID0gX29wdGlvbnM7XG4gICAgc2lnbmFsID0gdW5kZWZpbmVkO1xuICB9IGVsc2Uge1xuICAgIGRlbGF5ID0gX29wdGlvbnM/LmRlbGF5ID8/IERFRkFVTFRfREVMQVk7XG4gICAgcmV0cmllcyA9IF9vcHRpb25zPy5yZXRyaWVzID8/IERFRkFVTFRfUkVUUklFUztcbiAgICBzaWduYWwgPSBfb3B0aW9ucz8uc2lnbmFsO1xuICB9XG5cbiAgbGV0IGVycm9yO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgcmV0cmllczsgaSsrKSB7XG4gICAgaWYgKHNpZ25hbD8uYWJvcnRlZCkge1xuICAgICAgdGhyb3cgZXJyb3IgPz8gbmV3IEVycm9yKGBUaGUgcmV0cnkgb3BlcmF0aW9uIHdhcyBhYm9ydGVkIGR1ZSB0byBhbiBhYm9ydCBzaWduYWwuYCk7XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBhd2FpdCBmdW5jKCk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBlcnJvciA9IGVycjtcbiAgICAgIGF3YWl0IGRlbGF5VG9vbGtpdChkZWxheSk7XG4gICAgfVxuICB9XG5cbiAgdGhyb3cgZXJyb3I7XG59XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsU0FBUyxTQUFTLFlBQVksUUFBUSxzQkFBc0I7QUFxQjVELE1BQU0sZ0JBQWdCO0FBQ3RCLE1BQU0sa0JBQWtCLE9BQU8saUJBQWlCO0FBOENoRDs7Ozs7OztDQU9DLEdBQ0QsT0FBTyxlQUFlLE1BQVMsSUFBc0IsRUFBRSxRQUFnQztFQUNyRixJQUFJO0VBQ0osSUFBSTtFQUNKLElBQUk7RUFFSixJQUFJLE9BQU8sYUFBYSxVQUFVO0lBQ2hDLFFBQVE7SUFDUixVQUFVO0lBQ1YsU0FBUztFQUNYLE9BQU87SUFDTCxRQUFRLFVBQVUsU0FBUztJQUMzQixVQUFVLFVBQVUsV0FBVztJQUMvQixTQUFTLFVBQVU7RUFDckI7RUFFQSxJQUFJO0VBRUosSUFBSyxJQUFJLElBQUksR0FBRyxJQUFJLFNBQVMsSUFBSztJQUNoQyxJQUFJLFFBQVEsU0FBUztNQUNuQixNQUFNLFNBQVMsSUFBSSxNQUFNLENBQUMsdURBQXVELENBQUM7SUFDcEY7SUFFQSxJQUFJO01BQ0YsT0FBTyxNQUFNO0lBQ2YsRUFBRSxPQUFPLEtBQUs7TUFDWixRQUFRO01BQ1IsTUFBTSxhQUFhO0lBQ3JCO0VBQ0Y7RUFFQSxNQUFNO0FBQ1IifQ==
// denoCacheMetadata=18234196484202460754,4688649385956855314