export const getPlayerTurnIndex = ({ match, playerId })=>{
  return match.players.findIndex((p)=>p.id === playerId);
};
export const getPlayerStartingFrom = ({ startFromIdx, match, distance })=>{
  const numPlayers = match.players.length;
  const targetIndex = (startFromIdx + distance + numPlayers) % numPlayers;
  return match.players[targetIndex];
};
/**
 * Returns the distance (number of steps forward) from startPlayerId to targetPlayerId
 * in circular player order.
 */ export const getDistanceToPlayer = ({ match, startPlayerId, targetPlayerId, repetition = 0, direction = 'forward' })=>{
  const players = match.players;
  const numPlayers = players.length;
  const startIdx = players.findIndex((p)=>p.id === startPlayerId);
  const targetIdx = players.findIndex((p)=>p.id === targetPlayerId);
  if (startIdx === -1 || targetIdx === -1) {
    throw new Error('Player ID not found in match');
  }
  let base = (targetIdx - startIdx + numPlayers) % numPlayers;
  // Special case: same player, but no base distance â€” they still count as a full loop
  if (startPlayerId === targetPlayerId && repetition === 0) {
    base = 0;
    repetition = 1;
  }
  const loopOffset = repetition * numPlayers;
  const distance = direction === 'forward' ? base + loopOffset : -(base + loopOffset);
  return distance;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGU6Ly8vYXBwL3NlcnZlci9zcmMvc2hhcmVkL2dldC1wbGF5ZXItcG9zaXRpb24tdXRpbHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTWF0Y2gsIFBsYXllcklkIH0gZnJvbSAnc2hhcmVkL3NoYXJlZC10eXBlcy50cyc7XG5cbnR5cGUgR2V0UGxheWVySW5kZXhBcmdzID0ge1xuICBtYXRjaDogTWF0Y2g7XG4gIHBsYXllcklkOiBQbGF5ZXJJZDtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRQbGF5ZXJUdXJuSW5kZXggPSAoeyBtYXRjaCwgcGxheWVySWQgfTogR2V0UGxheWVySW5kZXhBcmdzKSA9PiB7XG4gIHJldHVybiBtYXRjaC5wbGF5ZXJzLmZpbmRJbmRleChwID0+IHAuaWQgPT09IHBsYXllcklkKTtcbn1cblxudHlwZSBHZXRQbGF5ZXJBcmdzID0ge1xuICBzdGFydEZyb21JZHg6IG51bWJlcixcbiAgbWF0Y2g6IE1hdGNoLFxuICBkaXN0YW5jZTogbnVtYmVyXG59O1xuXG5leHBvcnQgY29uc3QgZ2V0UGxheWVyU3RhcnRpbmdGcm9tID0gKHsgc3RhcnRGcm9tSWR4LCBtYXRjaCwgZGlzdGFuY2UgfTogR2V0UGxheWVyQXJncykgPT4ge1xuICBjb25zdCBudW1QbGF5ZXJzID0gbWF0Y2gucGxheWVycy5sZW5ndGg7XG4gIGNvbnN0IHRhcmdldEluZGV4ID0gKHN0YXJ0RnJvbUlkeCArIGRpc3RhbmNlICsgbnVtUGxheWVycykgJSBudW1QbGF5ZXJzO1xuICByZXR1cm4gbWF0Y2gucGxheWVyc1t0YXJnZXRJbmRleF07XG59O1xuXG50eXBlIERpc3RhbmNlQXJncyA9IHtcbiAgbWF0Y2g6IE1hdGNoO1xuICBzdGFydFBsYXllcklkOiBQbGF5ZXJJZDtcbiAgdGFyZ2V0UGxheWVySWQ6IFBsYXllcklkO1xuICAvKipcbiAgICogQGRlZmF1bHQgJ2ZvcndhcmQnXG4gICAqL1xuICBkaXJlY3Rpb24/OiAnZm9yd2FyZCcgfCAnYmFja3dhcmQnO1xuICByZXBldGl0aW9uPzogbnVtYmVyO1xufTtcblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBkaXN0YW5jZSAobnVtYmVyIG9mIHN0ZXBzIGZvcndhcmQpIGZyb20gc3RhcnRQbGF5ZXJJZCB0byB0YXJnZXRQbGF5ZXJJZFxuICogaW4gY2lyY3VsYXIgcGxheWVyIG9yZGVyLlxuICovXG5leHBvcnQgY29uc3QgZ2V0RGlzdGFuY2VUb1BsYXllciA9ICh7XG4gIG1hdGNoLFxuICBzdGFydFBsYXllcklkLFxuICB0YXJnZXRQbGF5ZXJJZCxcbiAgcmVwZXRpdGlvbiA9IDAsXG4gIGRpcmVjdGlvbiA9ICdmb3J3YXJkJ1xufTogRGlzdGFuY2VBcmdzKTogbnVtYmVyID0+IHtcbiAgY29uc3QgcGxheWVycyA9IG1hdGNoLnBsYXllcnM7XG4gIGNvbnN0IG51bVBsYXllcnMgPSBwbGF5ZXJzLmxlbmd0aDtcbiAgXG4gIGNvbnN0IHN0YXJ0SWR4ID0gcGxheWVycy5maW5kSW5kZXgocCA9PiBwLmlkID09PSBzdGFydFBsYXllcklkKTtcbiAgY29uc3QgdGFyZ2V0SWR4ID0gcGxheWVycy5maW5kSW5kZXgocCA9PiBwLmlkID09PSB0YXJnZXRQbGF5ZXJJZCk7XG4gIFxuICBpZiAoc3RhcnRJZHggPT09IC0xIHx8IHRhcmdldElkeCA9PT0gLTEpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1BsYXllciBJRCBub3QgZm91bmQgaW4gbWF0Y2gnKTtcbiAgfVxuICBcbiAgbGV0IGJhc2UgPSAodGFyZ2V0SWR4IC0gc3RhcnRJZHggKyBudW1QbGF5ZXJzKSAlIG51bVBsYXllcnM7XG4gIFxuICAvLyBTcGVjaWFsIGNhc2U6IHNhbWUgcGxheWVyLCBidXQgbm8gYmFzZSBkaXN0YW5jZSDigJQgdGhleSBzdGlsbCBjb3VudCBhcyBhIGZ1bGwgbG9vcFxuICBpZiAoc3RhcnRQbGF5ZXJJZCA9PT0gdGFyZ2V0UGxheWVySWQgJiYgcmVwZXRpdGlvbiA9PT0gMCkge1xuICAgIGJhc2UgPSAwO1xuICAgIHJlcGV0aXRpb24gPSAxO1xuICB9XG4gIFxuICBjb25zdCBsb29wT2Zmc2V0ID0gcmVwZXRpdGlvbiAqIG51bVBsYXllcnM7XG4gIFxuICBjb25zdCBkaXN0YW5jZSA9IGRpcmVjdGlvbiA9PT0gJ2ZvcndhcmQnXG4gICAgPyBiYXNlICsgbG9vcE9mZnNldFxuICAgIDogLShiYXNlICsgbG9vcE9mZnNldCk7XG4gIFxuICByZXR1cm4gZGlzdGFuY2U7XG59OyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFPQSxPQUFPLE1BQU0scUJBQXFCLENBQUMsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFzQjtFQUN4RSxPQUFPLE1BQU0sT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFBLElBQUssRUFBRSxFQUFFLEtBQUs7QUFDL0MsRUFBQztBQVFELE9BQU8sTUFBTSx3QkFBd0IsQ0FBQyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFpQjtFQUNwRixNQUFNLGFBQWEsTUFBTSxPQUFPLENBQUMsTUFBTTtFQUN2QyxNQUFNLGNBQWMsQ0FBQyxlQUFlLFdBQVcsVUFBVSxJQUFJO0VBQzdELE9BQU8sTUFBTSxPQUFPLENBQUMsWUFBWTtBQUNuQyxFQUFFO0FBYUY7OztDQUdDLEdBQ0QsT0FBTyxNQUFNLHNCQUFzQixDQUFDLEVBQ2xDLEtBQUssRUFDTCxhQUFhLEVBQ2IsY0FBYyxFQUNkLGFBQWEsQ0FBQyxFQUNkLFlBQVksU0FBUyxFQUNSO0VBQ2IsTUFBTSxVQUFVLE1BQU0sT0FBTztFQUM3QixNQUFNLGFBQWEsUUFBUSxNQUFNO0VBRWpDLE1BQU0sV0FBVyxRQUFRLFNBQVMsQ0FBQyxDQUFBLElBQUssRUFBRSxFQUFFLEtBQUs7RUFDakQsTUFBTSxZQUFZLFFBQVEsU0FBUyxDQUFDLENBQUEsSUFBSyxFQUFFLEVBQUUsS0FBSztFQUVsRCxJQUFJLGFBQWEsQ0FBQyxLQUFLLGNBQWMsQ0FBQyxHQUFHO0lBQ3ZDLE1BQU0sSUFBSSxNQUFNO0VBQ2xCO0VBRUEsSUFBSSxPQUFPLENBQUMsWUFBWSxXQUFXLFVBQVUsSUFBSTtFQUVqRCxvRkFBb0Y7RUFDcEYsSUFBSSxrQkFBa0Isa0JBQWtCLGVBQWUsR0FBRztJQUN4RCxPQUFPO0lBQ1AsYUFBYTtFQUNmO0VBRUEsTUFBTSxhQUFhLGFBQWE7RUFFaEMsTUFBTSxXQUFXLGNBQWMsWUFDM0IsT0FBTyxhQUNQLENBQUMsQ0FBQyxPQUFPLFVBQVU7RUFFdkIsT0FBTztBQUNULEVBQUUifQ==
// denoCacheMetadata=5856973701913273514,3936199920845273318