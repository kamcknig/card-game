import { Namespace } from "./namespace.ts";
export class ParentNamespace extends Namespace {
  static count = 0;
  children = new Set();
  constructor(server){
    super(server, "/_" + ParentNamespace.count++);
  // this.adapter = {
  //   broadcast(packet: Packet, opts: BroadcastOptions) {
  //     this.children.forEach((nsp: Namespace) => {
  //       nsp.adapter.broadcast(packet, opts);
  //     });
  //   }
  // };
  }
  emit(ev, ...args) {
    this.children.forEach((nsp)=>{
      nsp.emit(ev, ...args);
    });
    return true;
  }
  /* private */ _createChild(name) {
    const namespace = new Namespace(this._server, name);
    namespace._fns = this._fns.slice(0);
    this.listeners("connect").forEach((listener)=>namespace.on("connect", listener));
    this.listeners("connection").forEach((listener)=>namespace.on("connection", listener));
    this.children.add(namespace);
    this._server._nsps.set(name, namespace);
    return namespace;
  }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vZGVuby5sYW5kL3gvc29ja2V0X2lvQDAuMi4xL3BhY2thZ2VzL3NvY2tldC5pby9saWIvcGFyZW50LW5hbWVzcGFjZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBEZWZhdWx0RXZlbnRzTWFwLFxuICBFdmVudE5hbWVzLFxuICBFdmVudFBhcmFtcyxcbiAgRXZlbnRzTWFwLFxufSBmcm9tIFwiLi4vLi4vZXZlbnQtZW1pdHRlci9tb2QudHNcIjtcbmltcG9ydCB7IE5hbWVzcGFjZSB9IGZyb20gXCIuL25hbWVzcGFjZS50c1wiO1xuaW1wb3J0IHsgU2VydmVyIH0gZnJvbSBcIi4vc2VydmVyLnRzXCI7XG5cbmV4cG9ydCBjbGFzcyBQYXJlbnROYW1lc3BhY2U8XG4gIExpc3RlbkV2ZW50cyBleHRlbmRzIEV2ZW50c01hcCA9IERlZmF1bHRFdmVudHNNYXAsXG4gIEVtaXRFdmVudHMgZXh0ZW5kcyBFdmVudHNNYXAgPSBEZWZhdWx0RXZlbnRzTWFwLFxuICBTZXJ2ZXJTaWRlRXZlbnRzIGV4dGVuZHMgRXZlbnRzTWFwID0gRGVmYXVsdEV2ZW50c01hcCxcbiAgU29ja2V0RGF0YSA9IHVua25vd24sXG4+IGV4dGVuZHMgTmFtZXNwYWNlPExpc3RlbkV2ZW50cywgRW1pdEV2ZW50cywgU2VydmVyU2lkZUV2ZW50cywgU29ja2V0RGF0YT4ge1xuICBwcml2YXRlIHN0YXRpYyBjb3VudCA9IDA7XG5cbiAgcHJpdmF0ZSBjaGlsZHJlbjogU2V0PFxuICAgIE5hbWVzcGFjZTxMaXN0ZW5FdmVudHMsIEVtaXRFdmVudHMsIFNlcnZlclNpZGVFdmVudHMsIFNvY2tldERhdGE+XG4gID4gPSBuZXcgU2V0KCk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgc2VydmVyOiBTZXJ2ZXI8TGlzdGVuRXZlbnRzLCBFbWl0RXZlbnRzLCBTZXJ2ZXJTaWRlRXZlbnRzLCBTb2NrZXREYXRhPixcbiAgKSB7XG4gICAgc3VwZXIoc2VydmVyLCBcIi9fXCIgKyBQYXJlbnROYW1lc3BhY2UuY291bnQrKyk7XG4gICAgLy8gdGhpcy5hZGFwdGVyID0ge1xuICAgIC8vICAgYnJvYWRjYXN0KHBhY2tldDogUGFja2V0LCBvcHRzOiBCcm9hZGNhc3RPcHRpb25zKSB7XG4gICAgLy8gICAgIHRoaXMuY2hpbGRyZW4uZm9yRWFjaCgobnNwOiBOYW1lc3BhY2UpID0+IHtcbiAgICAvLyAgICAgICBuc3AuYWRhcHRlci5icm9hZGNhc3QocGFja2V0LCBvcHRzKTtcbiAgICAvLyAgICAgfSk7XG4gICAgLy8gICB9XG4gICAgLy8gfTtcbiAgfVxuXG4gIG92ZXJyaWRlIGVtaXQ8RXYgZXh0ZW5kcyBFdmVudE5hbWVzPEVtaXRFdmVudHM+PihcbiAgICBldjogRXYsXG4gICAgLi4uYXJnczogRXZlbnRQYXJhbXM8RW1pdEV2ZW50cywgRXY+XG4gICk6IGJvb2xlYW4ge1xuICAgIHRoaXMuY2hpbGRyZW4uZm9yRWFjaCgobnNwKSA9PiB7XG4gICAgICBuc3AuZW1pdChldiwgLi4uYXJncyk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIC8qIHByaXZhdGUgKi8gX2NyZWF0ZUNoaWxkKFxuICAgIG5hbWU6IHN0cmluZyxcbiAgKTogTmFtZXNwYWNlPExpc3RlbkV2ZW50cywgRW1pdEV2ZW50cywgU2VydmVyU2lkZUV2ZW50cywgU29ja2V0RGF0YT4ge1xuICAgIGNvbnN0IG5hbWVzcGFjZSA9IG5ldyBOYW1lc3BhY2UodGhpcy5fc2VydmVyLCBuYW1lKTtcbiAgICBuYW1lc3BhY2UuX2ZucyA9IHRoaXMuX2Zucy5zbGljZSgwKTtcbiAgICB0aGlzLmxpc3RlbmVycyhcImNvbm5lY3RcIikuZm9yRWFjaCgobGlzdGVuZXIpID0+XG4gICAgICBuYW1lc3BhY2Uub24oXCJjb25uZWN0XCIsIGxpc3RlbmVyKVxuICAgICk7XG4gICAgdGhpcy5saXN0ZW5lcnMoXCJjb25uZWN0aW9uXCIpLmZvckVhY2goKGxpc3RlbmVyKSA9PlxuICAgICAgbmFtZXNwYWNlLm9uKFwiY29ubmVjdGlvblwiLCBsaXN0ZW5lcilcbiAgICApO1xuICAgIHRoaXMuY2hpbGRyZW4uYWRkKG5hbWVzcGFjZSk7XG4gICAgdGhpcy5fc2VydmVyLl9uc3BzLnNldChuYW1lLCBuYW1lc3BhY2UpO1xuICAgIHJldHVybiBuYW1lc3BhY2U7XG4gIH1cblxuICAvLyBmZXRjaFNvY2tldHMoKTogUHJvbWlzZTxSZW1vdGVTb2NrZXQ8RW1pdEV2ZW50cywgU29ja2V0RGF0YT5bXT4ge1xuICAvLyAgIC8vIG5vdGU6IHdlIGNvdWxkIG1ha2UgdGhlIGZldGNoU29ja2V0cygpIG1ldGhvZCB3b3JrIGZvciBkeW5hbWljIG5hbWVzcGFjZXMgY3JlYXRlZCB3aXRoIGEgcmVnZXggKGJ5IHNlbmRpbmcgdGhlXG4gIC8vICAgLy8gcmVnZXggdG8gdGhlIG90aGVyIFNvY2tldC5JTyBzZXJ2ZXJzLCBhbmQgcmV0dXJuaW5nIHRoZSBzb2NrZXRzIG9mIGVhY2ggbWF0Y2hpbmcgbmFtZXNwYWNlIGZvciBleGFtcGxlKSwgYnV0XG4gIC8vICAgLy8gdGhlIGJlaGF2aW9yIGZvciBuYW1lc3BhY2VzIGNyZWF0ZWQgd2l0aCBhIGZ1bmN0aW9uIGlzIGxlc3MgY2xlYXJcbiAgLy8gICAvLyBub3RlwrI6IHdlIGNhbm5vdCBsb29wIG92ZXIgZWFjaCBjaGlsZHJlbiBuYW1lc3BhY2UsIGJlY2F1c2Ugd2l0aCBtdWx0aXBsZSBTb2NrZXQuSU8gc2VydmVycywgYSBnaXZlbiBuYW1lc3BhY2VcbiAgLy8gICAvLyBtYXkgZXhpc3Qgb24gb25lIG5vZGUgYnV0IG5vdCBleGlzdCBvbiBhbm90aGVyIChzaW5jZSBpdCBpcyBjcmVhdGVkIHVwb24gY2xpZW50IGNvbm5lY3Rpb24pXG4gIC8vICAgdGhyb3cgbmV3IEVycm9yKFwiZmV0Y2hTb2NrZXRzKCkgaXMgbm90IHN1cHBvcnRlZCBvbiBwYXJlbnQgbmFtZXNwYWNlc1wiKTtcbiAgLy8gfVxufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU1BLFNBQVMsU0FBUyxRQUFRLGlCQUFpQjtBQUczQyxPQUFPLE1BQU0sd0JBS0g7RUFDUixPQUFlLFFBQVEsRUFBRTtFQUVqQixXQUVKLElBQUksTUFBTTtFQUVkLFlBQ0UsTUFBc0UsQ0FDdEU7SUFDQSxLQUFLLENBQUMsUUFBUSxPQUFPLGdCQUFnQixLQUFLO0VBQzFDLG1CQUFtQjtFQUNuQix3REFBd0Q7RUFDeEQsa0RBQWtEO0VBQ2xELDZDQUE2QztFQUM3QyxVQUFVO0VBQ1YsTUFBTTtFQUNOLEtBQUs7RUFDUDtFQUVTLEtBQ1AsRUFBTSxFQUNOLEdBQUcsSUFBaUMsRUFDM0I7SUFDVCxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDO01BQ3JCLElBQUksSUFBSSxDQUFDLE9BQU87SUFDbEI7SUFFQSxPQUFPO0VBQ1Q7RUFFQSxXQUFXLEdBQUcsYUFDWixJQUFZLEVBQ3VEO0lBQ25FLE1BQU0sWUFBWSxJQUFJLFVBQVUsSUFBSSxDQUFDLE9BQU8sRUFBRTtJQUM5QyxVQUFVLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztJQUNqQyxJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsT0FBTyxDQUFDLENBQUMsV0FDakMsVUFBVSxFQUFFLENBQUMsV0FBVztJQUUxQixJQUFJLENBQUMsU0FBUyxDQUFDLGNBQWMsT0FBTyxDQUFDLENBQUMsV0FDcEMsVUFBVSxFQUFFLENBQUMsY0FBYztJQUU3QixJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQztJQUNsQixJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsTUFBTTtJQUM3QixPQUFPO0VBQ1Q7QUFVRiJ9
// denoCacheMetadata=9498132165091990675,3707220497583059762