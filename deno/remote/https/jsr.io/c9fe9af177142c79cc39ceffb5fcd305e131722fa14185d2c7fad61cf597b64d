import { iteratee as iterateeToolkit } from '../util/iteratee.ts';

/**
 * Computes the sum of the `number` values in `array`.
 *
 * @param {ArrayLike<number> | null | undefined} array - The array to iterate over.
 * @returns {number} Returns the sum.
 *
 * @example
 * sumBy([1, 2, 3]); // => 6
 * sumBy(null); // => 0
 * sumBy(undefined); // => 0
 */
export function sumBy(array: ArrayLike<number> | null | undefined): number;

/**
 * Computes the sum of the `bigint` values in `array`.
 *
 * @param {ArrayLike<bigint>} array - The array to iterate over.
 * @returns {bigint} Returns the sum.
 *
 * @example
 * sumBy([1n, 2n, 3n]); // => 6n
 */
export function sumBy(array: ArrayLike<bigint>): bigint;
/**
 * Computes the sum of the values in `array`.
 *
 * It does not coerce values to `number`.
 *
 * @param {ArrayLike<unknown> | null | undefined} array - The array to iterate over.
 * @returns {unknown} Returns the sum.
 *
 * @example
 * sumBy(["1", "2"]); // => "12"
 * sumBy([1, undefined, 2]); // => 3
 */
export function sumBy(array: ArrayLike<unknown> | null | undefined): unknown;

/**
 * Computes the sum of the `number` values that are returned by the `iteratee` function.
 *
 * @template T - The type of the array elements.
 * @param {ArrayLike<T>} array - The array to iterate over.
 * @param {(value: T) => number} iteratee - The function invoked per iteration.
 * @returns {number} Returns the sum.
 *
 * @example
 * sumBy([{ a: 1 }, { a: 2 }, { a: 3 }], object => object.a); // => 6
 */
export function sumBy<T>(array: ArrayLike<T>, iteratee: (value: T) => number): number;

/**
 * Computes the sum of the `bigint` values that are returned by the `iteratee` function.
 *
 * NOTE: If the `array` is empty, the function returns `0`.
 *
 * @template T - The type of the array elements.
 * @param {ArrayLike<T>} array - The array to iterate over.
 * @param {(value: T) => bigint} iteratee - The function invoked per iteration.
 * @returns {bigint | number} Returns the sum.
 *
 * @example
 * sumBy([{ a: 1n }, { a: 2n }, { a: 3n }], object => object.a); // => 6n
 * sumBy([], (item: { a: bigint }) => item.a); // => 0
 */
export function sumBy<T>(array: ArrayLike<T>, iteratee: (value: T) => bigint): bigint | number;

/**
 * Computes the sum of the values that are returned by the `iteratee` function.
 *
 * It does not coerce values to `number`.
 *
 * @template T - The type of the array elements.
 * @param {ArrayLike<T> | null | undefined} array - The array to iterate over.
 * @param {(value: T) => number | bigint} iteratee - The function invoked per iteration.
 * @returns {unknown} Returns the sum.
 *
 * @example
 * sumBy([1, undefined, 2], value => value); // => 3
 * sumBy(null); // => 0
 * sumBy(undefined); // => 0
 * sumBy([1, 2, 3]); // => 6
 * sumBy([1n, 2n, 3n]); // => 6n
 * sumBy([{ a: "1" }, { a: "2" }], object => object.a); // => "12"
 */
export function sumBy<T>(array: ArrayLike<T> | null | undefined, iteratee?: (value: T) => number | bigint): unknown {
  if (!array || !array.length) {
    return 0;
  }

  if (iteratee != null) {
    iteratee = iterateeToolkit(iteratee);
  }

  let result: any = undefined;

  for (let i = 0; i < array.length; i++) {
    const current = iteratee ? iteratee(array[i]) : array[i];

    if (current !== undefined) {
      if (result === undefined) {
        result = current;
      } else {
        result += current;
      }
    }
  }

  return result;
}

// denoCacheMetadata={"headers":{"accept-ranges":"bytes","x-goog-hash":"crc32c=EhCD9A==,md5=ezDUuNkyb1b+gQ6L9/N4EA==","x-goog-stored-content-length":"3430","content-length":"3430","expires":"Fri, 26 Jun 2026 21:45:35 GMT","etag":"\"7b30d4b8d9326f56fe810e8bf7f37810\"","x-jsr-cache-id":"ATL","x-guploader-uploadid":"ABgVH8-PvCR6sp8UXnmIfSa3Jubb_lP7KS8s2ZMpT5Q-XVFOVWgLwSymVKXypiIUrWXpLCQf","content-type":"text/typescript","cross-origin-resource-policy":"cross-origin","x-content-type-options":"nosniff","x-goog-generation":"1741509575635427","server":"UploadServer","via":"1.1 google","x-goog-storage-class":"STANDARD","x-goog-metageneration":"1","x-goog-stored-content-encoding":"identity","content-security-policy":"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';","x-jsr-cache-status":"revalidated","access-control-allow-origin":"*","cache-control":"public, max-age=31536000, immutable","date":"Thu, 26 Jun 2025 21:45:35 GMT","last-modified":"Sun, 09 Mar 2025 08:39:35 GMT","x-robots-tag":"noindex","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","access-control-expose-headers":"*","age":"0"},"url":"https://jsr.io/@es-toolkit/es-toolkit/1.33.0/src/compat/math/sumBy.ts","time":1750974334}