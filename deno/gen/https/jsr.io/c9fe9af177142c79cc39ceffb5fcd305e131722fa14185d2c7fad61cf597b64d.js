import { iteratee as iterateeToolkit } from '../util/iteratee.ts';
/**
 * Computes the sum of the values that are returned by the `iteratee` function.
 *
 * It does not coerce values to `number`.
 *
 * @template T - The type of the array elements.
 * @param {ArrayLike<T> | null | undefined} array - The array to iterate over.
 * @param {(value: T) => number | bigint} iteratee - The function invoked per iteration.
 * @returns {unknown} Returns the sum.
 *
 * @example
 * sumBy([1, undefined, 2], value => value); // => 3
 * sumBy(null); // => 0
 * sumBy(undefined); // => 0
 * sumBy([1, 2, 3]); // => 6
 * sumBy([1n, 2n, 3n]); // => 6n
 * sumBy([{ a: "1" }, { a: "2" }], object => object.a); // => "12"
 */ export function sumBy(array, iteratee) {
  if (!array || !array.length) {
    return 0;
  }
  if (iteratee != null) {
    iteratee = iterateeToolkit(iteratee);
  }
  let result = undefined;
  for(let i = 0; i < array.length; i++){
    const current = iteratee ? iteratee(array[i]) : array[i];
    if (current !== undefined) {
      if (result === undefined) {
        result = current;
      } else {
        result += current;
      }
    }
  }
  return result;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vanNyLmlvL0Blcy10b29sa2l0L2VzLXRvb2xraXQvMS4zMy4wL3NyYy9jb21wYXQvbWF0aC9zdW1CeS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpdGVyYXRlZSBhcyBpdGVyYXRlZVRvb2xraXQgfSBmcm9tICcuLi91dGlsL2l0ZXJhdGVlLnRzJztcblxuLyoqXG4gKiBDb21wdXRlcyB0aGUgc3VtIG9mIHRoZSBgbnVtYmVyYCB2YWx1ZXMgaW4gYGFycmF5YC5cbiAqXG4gKiBAcGFyYW0ge0FycmF5TGlrZTxudW1iZXI+IHwgbnVsbCB8IHVuZGVmaW5lZH0gYXJyYXkgLSBUaGUgYXJyYXkgdG8gaXRlcmF0ZSBvdmVyLlxuICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgc3VtLlxuICpcbiAqIEBleGFtcGxlXG4gKiBzdW1CeShbMSwgMiwgM10pOyAvLyA9PiA2XG4gKiBzdW1CeShudWxsKTsgLy8gPT4gMFxuICogc3VtQnkodW5kZWZpbmVkKTsgLy8gPT4gMFxuICovXG5leHBvcnQgZnVuY3Rpb24gc3VtQnkoYXJyYXk6IEFycmF5TGlrZTxudW1iZXI+IHwgbnVsbCB8IHVuZGVmaW5lZCk6IG51bWJlcjtcblxuLyoqXG4gKiBDb21wdXRlcyB0aGUgc3VtIG9mIHRoZSBgYmlnaW50YCB2YWx1ZXMgaW4gYGFycmF5YC5cbiAqXG4gKiBAcGFyYW0ge0FycmF5TGlrZTxiaWdpbnQ+fSBhcnJheSAtIFRoZSBhcnJheSB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcmV0dXJucyB7YmlnaW50fSBSZXR1cm5zIHRoZSBzdW0uXG4gKlxuICogQGV4YW1wbGVcbiAqIHN1bUJ5KFsxbiwgMm4sIDNuXSk7IC8vID0+IDZuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzdW1CeShhcnJheTogQXJyYXlMaWtlPGJpZ2ludD4pOiBiaWdpbnQ7XG4vKipcbiAqIENvbXB1dGVzIHRoZSBzdW0gb2YgdGhlIHZhbHVlcyBpbiBgYXJyYXlgLlxuICpcbiAqIEl0IGRvZXMgbm90IGNvZXJjZSB2YWx1ZXMgdG8gYG51bWJlcmAuXG4gKlxuICogQHBhcmFtIHtBcnJheUxpa2U8dW5rbm93bj4gfCBudWxsIHwgdW5kZWZpbmVkfSBhcnJheSAtIFRoZSBhcnJheSB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcmV0dXJucyB7dW5rbm93bn0gUmV0dXJucyB0aGUgc3VtLlxuICpcbiAqIEBleGFtcGxlXG4gKiBzdW1CeShbXCIxXCIsIFwiMlwiXSk7IC8vID0+IFwiMTJcIlxuICogc3VtQnkoWzEsIHVuZGVmaW5lZCwgMl0pOyAvLyA9PiAzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzdW1CeShhcnJheTogQXJyYXlMaWtlPHVua25vd24+IHwgbnVsbCB8IHVuZGVmaW5lZCk6IHVua25vd247XG5cbi8qKlxuICogQ29tcHV0ZXMgdGhlIHN1bSBvZiB0aGUgYG51bWJlcmAgdmFsdWVzIHRoYXQgYXJlIHJldHVybmVkIGJ5IHRoZSBgaXRlcmF0ZWVgIGZ1bmN0aW9uLlxuICpcbiAqIEB0ZW1wbGF0ZSBUIC0gVGhlIHR5cGUgb2YgdGhlIGFycmF5IGVsZW1lbnRzLlxuICogQHBhcmFtIHtBcnJheUxpa2U8VD59IGFycmF5IC0gVGhlIGFycmF5IHRvIGl0ZXJhdGUgb3Zlci5cbiAqIEBwYXJhbSB7KHZhbHVlOiBUKSA9PiBudW1iZXJ9IGl0ZXJhdGVlIC0gVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi5cbiAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgdGhlIHN1bS5cbiAqXG4gKiBAZXhhbXBsZVxuICogc3VtQnkoW3sgYTogMSB9LCB7IGE6IDIgfSwgeyBhOiAzIH1dLCBvYmplY3QgPT4gb2JqZWN0LmEpOyAvLyA9PiA2XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzdW1CeTxUPihhcnJheTogQXJyYXlMaWtlPFQ+LCBpdGVyYXRlZTogKHZhbHVlOiBUKSA9PiBudW1iZXIpOiBudW1iZXI7XG5cbi8qKlxuICogQ29tcHV0ZXMgdGhlIHN1bSBvZiB0aGUgYGJpZ2ludGAgdmFsdWVzIHRoYXQgYXJlIHJldHVybmVkIGJ5IHRoZSBgaXRlcmF0ZWVgIGZ1bmN0aW9uLlxuICpcbiAqIE5PVEU6IElmIHRoZSBgYXJyYXlgIGlzIGVtcHR5LCB0aGUgZnVuY3Rpb24gcmV0dXJucyBgMGAuXG4gKlxuICogQHRlbXBsYXRlIFQgLSBUaGUgdHlwZSBvZiB0aGUgYXJyYXkgZWxlbWVudHMuXG4gKiBAcGFyYW0ge0FycmF5TGlrZTxUPn0gYXJyYXkgLSBUaGUgYXJyYXkgdG8gaXRlcmF0ZSBvdmVyLlxuICogQHBhcmFtIHsodmFsdWU6IFQpID0+IGJpZ2ludH0gaXRlcmF0ZWUgLSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHJldHVybnMge2JpZ2ludCB8IG51bWJlcn0gUmV0dXJucyB0aGUgc3VtLlxuICpcbiAqIEBleGFtcGxlXG4gKiBzdW1CeShbeyBhOiAxbiB9LCB7IGE6IDJuIH0sIHsgYTogM24gfV0sIG9iamVjdCA9PiBvYmplY3QuYSk7IC8vID0+IDZuXG4gKiBzdW1CeShbXSwgKGl0ZW06IHsgYTogYmlnaW50IH0pID0+IGl0ZW0uYSk7IC8vID0+IDBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHN1bUJ5PFQ+KGFycmF5OiBBcnJheUxpa2U8VD4sIGl0ZXJhdGVlOiAodmFsdWU6IFQpID0+IGJpZ2ludCk6IGJpZ2ludCB8IG51bWJlcjtcblxuLyoqXG4gKiBDb21wdXRlcyB0aGUgc3VtIG9mIHRoZSB2YWx1ZXMgdGhhdCBhcmUgcmV0dXJuZWQgYnkgdGhlIGBpdGVyYXRlZWAgZnVuY3Rpb24uXG4gKlxuICogSXQgZG9lcyBub3QgY29lcmNlIHZhbHVlcyB0byBgbnVtYmVyYC5cbiAqXG4gKiBAdGVtcGxhdGUgVCAtIFRoZSB0eXBlIG9mIHRoZSBhcnJheSBlbGVtZW50cy5cbiAqIEBwYXJhbSB7QXJyYXlMaWtlPFQ+IHwgbnVsbCB8IHVuZGVmaW5lZH0gYXJyYXkgLSBUaGUgYXJyYXkgdG8gaXRlcmF0ZSBvdmVyLlxuICogQHBhcmFtIHsodmFsdWU6IFQpID0+IG51bWJlciB8IGJpZ2ludH0gaXRlcmF0ZWUgLSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHJldHVybnMge3Vua25vd259IFJldHVybnMgdGhlIHN1bS5cbiAqXG4gKiBAZXhhbXBsZVxuICogc3VtQnkoWzEsIHVuZGVmaW5lZCwgMl0sIHZhbHVlID0+IHZhbHVlKTsgLy8gPT4gM1xuICogc3VtQnkobnVsbCk7IC8vID0+IDBcbiAqIHN1bUJ5KHVuZGVmaW5lZCk7IC8vID0+IDBcbiAqIHN1bUJ5KFsxLCAyLCAzXSk7IC8vID0+IDZcbiAqIHN1bUJ5KFsxbiwgMm4sIDNuXSk7IC8vID0+IDZuXG4gKiBzdW1CeShbeyBhOiBcIjFcIiB9LCB7IGE6IFwiMlwiIH1dLCBvYmplY3QgPT4gb2JqZWN0LmEpOyAvLyA9PiBcIjEyXCJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHN1bUJ5PFQ+KGFycmF5OiBBcnJheUxpa2U8VD4gfCBudWxsIHwgdW5kZWZpbmVkLCBpdGVyYXRlZT86ICh2YWx1ZTogVCkgPT4gbnVtYmVyIHwgYmlnaW50KTogdW5rbm93biB7XG4gIGlmICghYXJyYXkgfHwgIWFycmF5Lmxlbmd0aCkge1xuICAgIHJldHVybiAwO1xuICB9XG5cbiAgaWYgKGl0ZXJhdGVlICE9IG51bGwpIHtcbiAgICBpdGVyYXRlZSA9IGl0ZXJhdGVlVG9vbGtpdChpdGVyYXRlZSk7XG4gIH1cblxuICBsZXQgcmVzdWx0OiBhbnkgPSB1bmRlZmluZWQ7XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcnJheS5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGN1cnJlbnQgPSBpdGVyYXRlZSA/IGl0ZXJhdGVlKGFycmF5W2ldKSA6IGFycmF5W2ldO1xuXG4gICAgaWYgKGN1cnJlbnQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgaWYgKHJlc3VsdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJlc3VsdCA9IGN1cnJlbnQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXN1bHQgKz0gY3VycmVudDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFNBQVMsWUFBWSxlQUFlLFFBQVEsc0JBQXNCO0FBb0VsRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FpQkMsR0FDRCxPQUFPLFNBQVMsTUFBUyxLQUFzQyxFQUFFLFFBQXdDO0VBQ3ZHLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxNQUFNLEVBQUU7SUFDM0IsT0FBTztFQUNUO0VBRUEsSUFBSSxZQUFZLE1BQU07SUFDcEIsV0FBVyxnQkFBZ0I7RUFDN0I7RUFFQSxJQUFJLFNBQWM7RUFFbEIsSUFBSyxJQUFJLElBQUksR0FBRyxJQUFJLE1BQU0sTUFBTSxFQUFFLElBQUs7SUFDckMsTUFBTSxVQUFVLFdBQVcsU0FBUyxLQUFLLENBQUMsRUFBRSxJQUFJLEtBQUssQ0FBQyxFQUFFO0lBRXhELElBQUksWUFBWSxXQUFXO01BQ3pCLElBQUksV0FBVyxXQUFXO1FBQ3hCLFNBQVM7TUFDWCxPQUFPO1FBQ0wsVUFBVTtNQUNaO0lBQ0Y7RUFDRjtFQUVBLE9BQU87QUFDVCJ9
// denoCacheMetadata=5885305048058390207,16202237489032859194