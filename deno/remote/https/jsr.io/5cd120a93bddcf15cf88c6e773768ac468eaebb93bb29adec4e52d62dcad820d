/**
 * Groups the elements of an array based on a provided key-generating function.
 *
 * This function takes an array and a function that generates a key from each element. It returns
 * an object where the keys are the generated keys and the values are arrays of elements that share
 * the same key.
 *
 * @template T - The type of elements in the array.
 * @template K - The type of keys.
 * @param {T[]} arr - The array to group.
 * @param {(item: T) => K} getKeyFromItem - A function that generates a key from an element.
 * @returns {Record<K, T[]>} An object where each key is associated with an array of elements that
 * share that key.
 *
 * @example
 * const array = [
 *   { category: 'fruit', name: 'apple' },
 *   { category: 'fruit', name: 'banana' },
 *   { category: 'vegetable', name: 'carrot' }
 * ];
 * const result = groupBy(array, item => item.category);
 * // result will be:
 * // {
 * //   fruit: [
 * //     { category: 'fruit', name: 'apple' },
 * //     { category: 'fruit', name: 'banana' }
 * //   ],
 * //   vegetable: [
 * //     { category: 'vegetable', name: 'carrot' }
 * //   ]
 * // }
 */
export function groupBy<T, K extends PropertyKey>(arr: readonly T[], getKeyFromItem: (item: T) => K): Record<K, T[]> {
  const result = {} as Record<K, T[]>;

  for (let i = 0; i < arr.length; i++) {
    const item = arr[i];
    const key = getKeyFromItem(item);

    if (!Object.hasOwn(result, key)) {
      result[key] = [];
    }

    result[key].push(item);
  }

  return result;
}

// denoCacheMetadata={"headers":{"etag":"\"af2baa46b8a0703f477e0fc8cb6c83fc\"","x-guploader-uploadid":"ABgVH8_NOEGWR2b1O802P_EfzTc7xdau3ghbQQi9X-8o_Pm47PtuvWkoChBJaGRTSLMkB9fDNvU8em4","age":"0","x-goog-metageneration":"1","x-jsr-cache-id":"ATL","expires":"Fri, 26 Jun 2026 21:45:35 GMT","x-jsr-cache-status":"revalidated","date":"Thu, 26 Jun 2025 21:45:35 GMT","x-goog-stored-content-length":"1511","x-goog-storage-class":"STANDARD","x-robots-tag":"noindex","access-control-allow-origin":"*","cross-origin-resource-policy":"cross-origin","x-goog-stored-content-encoding":"identity","x-goog-hash":"crc32c=XW04aA==,md5=ryuqRrigcD9Hfg/Iy2yD/A==","content-length":"1511","server":"UploadServer","via":"1.1 google","last-modified":"Sun, 09 Mar 2025 08:39:35 GMT","x-goog-generation":"1741509575441871","cache-control":"public, max-age=31536000, immutable","access-control-expose-headers":"*","x-content-type-options":"nosniff","accept-ranges":"bytes","content-type":"text/typescript","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","content-security-policy":"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';"},"url":"https://jsr.io/@es-toolkit/es-toolkit/1.33.0/src/array/groupBy.ts","time":1750974334}