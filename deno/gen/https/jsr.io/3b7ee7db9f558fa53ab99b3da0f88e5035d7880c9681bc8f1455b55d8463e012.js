/**
 * Creates a new object with the same values as the given object, but with keys generated
 * by running each own enumerable property of the object through the iteratee function.
 *
 * @template T - The type of the object.
 * @template K - The type of the new keys generated by the iteratee function.
 *
 * @param {T} object - The object to iterate over.
 * @param {(value: T[keyof T], key: keyof T, object: T) => K} getNewKey - The function invoked per own enumerable property.
 * @returns {Record<K, T[keyof T]>} - Returns the new mapped object.
 *
 * @example
 * // Example usage:
 * const obj = { a: 1, b: 2 };
 * const result = mapKeys(obj, (value, key) => key + value);
 * console.log(result); // { a1: 1, b2: 2 }
 */ export function mapKeys(object, getNewKey) {
  const result = {};
  const keys = Object.keys(object);
  for(let i = 0; i < keys.length; i++){
    const key = keys[i];
    const value = object[key];
    result[getNewKey(value, key, object)] = value;
  }
  return result;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vanNyLmlvL0Blcy10b29sa2l0L2VzLXRvb2xraXQvMS4zMy4wL3NyYy9vYmplY3QvbWFwS2V5cy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZXMgYSBuZXcgb2JqZWN0IHdpdGggdGhlIHNhbWUgdmFsdWVzIGFzIHRoZSBnaXZlbiBvYmplY3QsIGJ1dCB3aXRoIGtleXMgZ2VuZXJhdGVkXG4gKiBieSBydW5uaW5nIGVhY2ggb3duIGVudW1lcmFibGUgcHJvcGVydHkgb2YgdGhlIG9iamVjdCB0aHJvdWdoIHRoZSBpdGVyYXRlZSBmdW5jdGlvbi5cbiAqXG4gKiBAdGVtcGxhdGUgVCAtIFRoZSB0eXBlIG9mIHRoZSBvYmplY3QuXG4gKiBAdGVtcGxhdGUgSyAtIFRoZSB0eXBlIG9mIHRoZSBuZXcga2V5cyBnZW5lcmF0ZWQgYnkgdGhlIGl0ZXJhdGVlIGZ1bmN0aW9uLlxuICpcbiAqIEBwYXJhbSB7VH0gb2JqZWN0IC0gVGhlIG9iamVjdCB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcGFyYW0geyh2YWx1ZTogVFtrZXlvZiBUXSwga2V5OiBrZXlvZiBULCBvYmplY3Q6IFQpID0+IEt9IGdldE5ld0tleSAtIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBvd24gZW51bWVyYWJsZSBwcm9wZXJ0eS5cbiAqIEByZXR1cm5zIHtSZWNvcmQ8SywgVFtrZXlvZiBUXT59IC0gUmV0dXJucyB0aGUgbmV3IG1hcHBlZCBvYmplY3QuXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIEV4YW1wbGUgdXNhZ2U6XG4gKiBjb25zdCBvYmogPSB7IGE6IDEsIGI6IDIgfTtcbiAqIGNvbnN0IHJlc3VsdCA9IG1hcEtleXMob2JqLCAodmFsdWUsIGtleSkgPT4ga2V5ICsgdmFsdWUpO1xuICogY29uc29sZS5sb2cocmVzdWx0KTsgLy8geyBhMTogMSwgYjI6IDIgfVxuICovXG5leHBvcnQgZnVuY3Rpb24gbWFwS2V5czxUIGV4dGVuZHMgUmVjb3JkPFByb3BlcnR5S2V5LCBhbnk+LCBLIGV4dGVuZHMgUHJvcGVydHlLZXk+KFxuICBvYmplY3Q6IFQsXG4gIGdldE5ld0tleTogKHZhbHVlOiBUW2tleW9mIFRdLCBrZXk6IGtleW9mIFQsIG9iamVjdDogVCkgPT4gS1xuKTogUmVjb3JkPEssIFRba2V5b2YgVF0+IHtcbiAgY29uc3QgcmVzdWx0ID0ge30gYXMgUmVjb3JkPEssIFRba2V5b2YgVF0+O1xuICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KSBhcyBBcnJheTxrZXlvZiBUPjtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBrZXkgPSBrZXlzW2ldO1xuICAgIGNvbnN0IHZhbHVlID0gb2JqZWN0W2tleV07XG5cbiAgICByZXN1bHRbZ2V0TmV3S2V5KHZhbHVlLCBrZXksIG9iamVjdCldID0gdmFsdWUgYXMgYW55O1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztDQWdCQyxHQUNELE9BQU8sU0FBUyxRQUNkLE1BQVMsRUFDVCxTQUE0RDtFQUU1RCxNQUFNLFNBQVMsQ0FBQztFQUNoQixNQUFNLE9BQU8sT0FBTyxJQUFJLENBQUM7RUFFekIsSUFBSyxJQUFJLElBQUksR0FBRyxJQUFJLEtBQUssTUFBTSxFQUFFLElBQUs7SUFDcEMsTUFBTSxNQUFNLElBQUksQ0FBQyxFQUFFO0lBQ25CLE1BQU0sUUFBUSxNQUFNLENBQUMsSUFBSTtJQUV6QixNQUFNLENBQUMsVUFBVSxPQUFPLEtBQUssUUFBUSxHQUFHO0VBQzFDO0VBRUEsT0FBTztBQUNUIn0=
// denoCacheMetadata=16893837623121283790,8631065329536741175