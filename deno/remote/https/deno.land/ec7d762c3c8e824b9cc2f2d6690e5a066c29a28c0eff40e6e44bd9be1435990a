/**
 * @example
 * import { Server } from "https://deno.land/x/socket_io@x.y.z/mod.ts";
 *
 * const io = new Server();
 *
 * io.on("connection", (socket) => {
 *   console.log(`socket ${socket.id} connected`);
 *
 *   // send an event to the client
 *   socket.emit("foo", "bar");
 *
 *   socket.on("foobar", () => {
 *     // an event was received from the client
 *   });
 *
 *   // upon disconnection
 *   socket.on("disconnect", (reason) => {
 *     console.log(`socket ${socket.id} disconnected due to ${reason}`);
 *   });
 * });
 *
 * Deno.serve({
 *   handler: io.handler(),
 *   port: 3000,
 * });
 */
export {
  Adapter,
  type BroadcastOptions,
  type Namespace,
  Server,
  type ServerOptions,
  type Socket,
} from "./packages/socket.io/mod.ts";

/**
 * The Redis adapter, to broadcast packets between several Socket.IO servers
 *
 * Documentation: https://socket.io/docs/v4/redis-adapter/
 *
 * @example
 * import { Server, createRedisAdapter, createRedisClient } from "https://deno.land/x/socket_io/mod.ts";
 *
 * const [pubClient, subClient] = await Promise.all([
 *   createRedisClient({
 *     hostname: "localhost",
 *   }),
 *   createRedisClient({
 *     hostname: "localhost",
 *   })
 * ]);
 *
 * const io = new Server({
 *     adapter: createRedisAdapter(pubClient, subClient)
 * });
 *
 * Deno.serve({
 *   handler: io.handler(),
 *   port: 3000
 * });
 */
export {
  createAdapter as createRedisAdapter,
  type RedisAdapterOptions,
} from "./packages/socket.io-redis-adapter/mod.ts";

/**
 * Temporary export to provide a workaround for https://github.com/denodrivers/redis/issues/335
 */
export { connect as createRedisClient } from "./vendor/deno.land/x/redis@v0.27.1/mod.ts";

// denoCacheMetadata={"headers":{"content-length":"1705","x-amz-version-id":"MZtp10WimihjyVwz6irU_ZyIDarSOI82","last-modified":"Thu, 09 Jan 2025 07:38:35 GMT","x-amz-cf-id":"xXXc_KDAVfD8CoLwWrKRZT1LX2QA9FVVbk26t2WHnuhrM5rBOfHBMw==","cache-control":"public, max-age=31536000, immutable","vary":"Accept-Encoding, Origin","cross-origin-resource-policy":"same-origin","x-cache":"Hit from cloudfront","server":"deno/gcp-us-east4","x-content-type-options":"nosniff","cross-origin-embedder-policy":"same-origin","content-type":"application/typescript; charset=utf-8","x-amz-cf-pop":"IAD61-P1","content-security-policy":"default-src 'none'; style-src 'unsafe-inline'; sandbox","date":"Wed, 29 Jan 2025 15:36:35 GMT","referrer-policy":"strict-origin-when-cross-origin","cross-origin-opener-policy":"same-origin","accept-ranges":"bytes","x-frame-options":"DENY","x-amz-replication-status":"COMPLETED","via":"http/2 edgeproxy-h","age":"12809339","etag":"\"3021455c9e78764377f17b5b6f5f084b\"","access-control-allow-origin":"*","strict-transport-security":"max-age=63072000; includeSubDomains; preload","x-amz-server-side-encryption":"AES256","server-timing":"fetchSource;dur=4"},"url":"https://deno.land/x/socket_io@0.2.1/mod.ts","time":1750974332}