// Copyright 2018-2024 the Deno authors. All rights reserved. MIT license.
// This module is browser compatible.

import { DateTimeFormatter } from "./_date_time_formatter.ts";

/**
 * Parses a date string using the specified format string.
 *
 * The following symbols from
 * {@link https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table | unicode LDML}
 * are supported:
 * - `yyyy` - numeric year
 * - `yy` - 2-digit year
 * - `M` - numeric month
 * - `MM` - 2-digit month
 * - `d` - numeric day
 * - `dd` - 2-digit day
 * - `H` - numeric hour (0-23 hours)
 * - `HH` - 2-digit hour (00-23 hours)
 * - `h` - numeric hour (1-12 hours)
 * - `hh` - 2-digit hour (01-12 hours)
 * - `m` - numeric minute
 * - `mm` - 2-digit minute
 * - `s` - numeric second
 * - `ss` - 2-digit second
 * - `S` - 1-digit fractional second
 * - `SS` - 2-digit fractional second
 * - `SSS` - 3-digit fractional second
 * - `a` - dayPeriod, either `AM` or `PM`
 * - `'foo'` - quoted literal
 * - `./-` - unquoted literal
 *
 * @param dateString The date string to parse.
 * @param formatString The date time string format.
 * @return The parsed date.
 *
 * @example Basic usage
 * ```ts
 * import { parse } from "@std/datetime/parse";
 * import { assertEquals } from "@std/assert";
 *
 * assertEquals(parse("01-03-2019 16:30", "MM-dd-yyyy HH:mm"), new Date(2019, 0, 3, 16, 30));
 *
 * assertEquals(parse("01-03-2019 16:33:23.123", "MM-dd-yyyy HH:mm:ss.SSS"), new Date(2019, 0, 3, 16, 33, 23, 123));
 * ```
 */
export function parse(dateString: string, formatString: string): Date {
  const formatter = new DateTimeFormatter(formatString);
  const parts = formatter.parseToParts(dateString);
  const sortParts = formatter.sortDateTimeFormatPart(parts);
  return formatter.partsToDate(sortParts);
}

// denoCacheMetadata={"headers":{"x-goog-hash":"crc32c=7MYIjA==,md5=XqEx2bjCXs8rxZILaPifRA==","content-length":"1795","cache-control":"public, max-age=31536000, immutable","x-robots-tag":"noindex","x-guploader-uploadid":"ABgVH88cfmPWDy_7CyjxBQ7bOmQZA3tF5PklWziNdsWjg-_FV-ZKzaqgAvKuweoroaRiZaIJd4__w10","access-control-expose-headers":"*","content-type":"text/typescript","accept-ranges":"bytes","x-jsr-cache-status":"revalidated","cross-origin-resource-policy":"cross-origin","age":"0","date":"Thu, 26 Jun 2025 21:45:36 GMT","content-security-policy":"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';","access-control-allow-origin":"*","x-content-type-options":"nosniff","expires":"Fri, 26 Jun 2026 21:45:36 GMT","etag":"\"5ea131d9b8c25ecf2bc5920b68f89f44\"","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","x-goog-stored-content-encoding":"identity","x-goog-storage-class":"STANDARD","server":"UploadServer","x-goog-stored-content-length":"1795","x-goog-metageneration":"1","via":"1.1 google","last-modified":"Fri, 12 Jul 2024 10:50:27 GMT","x-jsr-cache-id":"ATL","x-goog-generation":"1720781427451664"},"url":"https://jsr.io/@std/datetime/0.224.3/parse.ts","time":1750974335}