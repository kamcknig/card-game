/**
 * Converts a deep key string into an array of path segments.
 *
 * This function takes a string representing a deep key (e.g., 'a.b.c' or 'a[b][c]') and breaks it down into an array of strings, each representing a segment of the path.
 *
 * @param {string} deepKey - The deep key string to convert.
 * @returns {string[]} An array of strings, each representing a segment of the path.
 *
 * Examples:
 *
 * toPath('a.b.c') // Returns ['a', 'b', 'c']
 * toPath('a[b][c]') // Returns ['a', 'b', 'c']
 * toPath('.a.b.c') // Returns ['', 'a', 'b', 'c']
 * toPath('a["b.c"].d') // Returns ['a', 'b.c', 'd']
 * toPath('') // Returns []
 * toPath('.a[b].c.d[e]["f.g"].h') // Returns ['', 'a', 'b', 'c', 'd', 'e', 'f.g', 'h']
 */
export function toPath(deepKey: string): string[] {
  const result: string[] = [];
  const length = deepKey.length;

  if (length === 0) {
    return result;
  }

  let index = 0;
  let key = '';
  let quoteChar = '';
  let bracket = false;

  // Leading dot
  if (deepKey.charCodeAt(0) === 46) {
    result.push('');
    index++;
  }

  while (index < length) {
    const char = deepKey[index];

    if (quoteChar) {
      if (char === '\\' && index + 1 < length) {
        // Escape character
        index++;
        key += deepKey[index];
      } else if (char === quoteChar) {
        // End of quote
        quoteChar = '';
      } else {
        key += char;
      }
    } else if (bracket) {
      if (char === '"' || char === "'") {
        // Start of quoted string inside brackets
        quoteChar = char;
      } else if (char === ']') {
        // End of bracketed segment
        bracket = false;
        result.push(key);
        key = '';
      } else {
        key += char;
      }
    } else {
      if (char === '[') {
        // Start of bracketed segment
        bracket = true;
        if (key) {
          result.push(key);
          key = '';
        }
      } else if (char === '.') {
        if (key) {
          result.push(key);
          key = '';
        }
      } else {
        key += char;
      }
    }

    index++;
  }

  if (key) {
    result.push(key);
  }

  return result;
}

// denoCacheMetadata={"headers":{"x-goog-generation":"1741509574970950","date":"Thu, 26 Jun 2025 21:45:35 GMT","via":"1.1 google","content-security-policy":"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';","x-goog-storage-class":"STANDARD","x-jsr-cache-id":"ATL","cross-origin-resource-policy":"cross-origin","x-goog-metageneration":"1","accept-ranges":"bytes","server":"UploadServer","access-control-allow-origin":"*","x-guploader-uploadid":"ABgVH8-oD0qQlNtOnmPsaOHLprrcW8Vnck7Lb2TqHhhuS1Nn48OzVkWSazd8s_vqK8cTlU9j","x-goog-hash":"crc32c=yMD+Wg==,md5=BVlCl/YVE7nm7jFO7ZP79Q==","cache-control":"public, max-age=31536000, immutable","x-robots-tag":"noindex","access-control-expose-headers":"*","x-content-type-options":"nosniff","etag":"\"05594297f61513b9e6ee314eed93fbf5\"","content-type":"text/typescript","age":"0","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","expires":"Fri, 26 Jun 2026 21:45:35 GMT","content-length":"2142","x-goog-stored-content-encoding":"identity","x-jsr-cache-status":"revalidated","x-goog-stored-content-length":"2142","last-modified":"Sun, 09 Mar 2025 08:39:35 GMT"},"url":"https://jsr.io/@es-toolkit/es-toolkit/1.33.0/src/compat/util/toPath.ts","time":1750974334}