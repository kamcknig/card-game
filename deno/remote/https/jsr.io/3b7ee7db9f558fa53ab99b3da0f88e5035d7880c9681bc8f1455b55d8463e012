/**
 * Creates a new object with the same values as the given object, but with keys generated
 * by running each own enumerable property of the object through the iteratee function.
 *
 * @template T - The type of the object.
 * @template K - The type of the new keys generated by the iteratee function.
 *
 * @param {T} object - The object to iterate over.
 * @param {(value: T[keyof T], key: keyof T, object: T) => K} getNewKey - The function invoked per own enumerable property.
 * @returns {Record<K, T[keyof T]>} - Returns the new mapped object.
 *
 * @example
 * // Example usage:
 * const obj = { a: 1, b: 2 };
 * const result = mapKeys(obj, (value, key) => key + value);
 * console.log(result); // { a1: 1, b2: 2 }
 */
export function mapKeys<T extends Record<PropertyKey, any>, K extends PropertyKey>(
  object: T,
  getNewKey: (value: T[keyof T], key: keyof T, object: T) => K
): Record<K, T[keyof T]> {
  const result = {} as Record<K, T[keyof T]>;
  const keys = Object.keys(object) as Array<keyof T>;

  for (let i = 0; i < keys.length; i++) {
    const key = keys[i];
    const value = object[key];

    result[getNewKey(value, key, object)] = value as any;
  }

  return result;
}

// denoCacheMetadata={"headers":{"expires":"Fri, 26 Jun 2026 21:45:35 GMT","last-modified":"Sun, 09 Mar 2025 08:39:35 GMT","etag":"\"332c4d5d7a30abe9b763cb80f69dabab\"","age":"0","access-control-allow-origin":"*","access-control-expose-headers":"*","cross-origin-resource-policy":"cross-origin","x-robots-tag":"noindex","x-goog-generation":"1741509575214451","x-goog-metageneration":"1","x-guploader-uploadid":"ABgVH8_oH4S9OON2wUefJK0Uei8aQnAutbof3bouQmhlrw2vg16JP9Nu5TT4V-Iv1cwufEkOGa6GWP8","x-goog-storage-class":"STANDARD","content-type":"text/typescript","cache-control":"public, max-age=31536000, immutable","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","content-security-policy":"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';","x-goog-stored-content-encoding":"identity","server":"UploadServer","x-jsr-cache-id":"ATL","x-goog-hash":"crc32c=8GjXkg==,md5=MyxNXXowq+m3Y8uA9p2rqw==","content-length":"1196","x-jsr-cache-status":"revalidated","via":"1.1 google","x-content-type-options":"nosniff","date":"Thu, 26 Jun 2025 21:45:35 GMT","x-goog-stored-content-length":"1196","accept-ranges":"bytes"},"url":"https://jsr.io/@es-toolkit/es-toolkit/1.33.0/src/object/mapKeys.ts","time":1750974334}