/**
 * Creates a new object with the same keys as the given object, but with values generated
 * by running each own enumerable property of the object through the iteratee function.
 *
 * @template T - The type of the object.
 * @template K - The type of the keys in the object.
 * @template V - The type of the new values generated by the iteratee function.
 *
 * @param {T} object - The object to iterate over.
 * @param {(value: T[K], key: K, object: T) => V} getNewValue - The function invoked per own enumerable property.
 * @returns {Record<K, V>} - Returns the new mapped object.
 *
 * @example
 * // Example usage:
 * const obj = { a: 1, b: 2 };
 * const result = mapValues(obj, (value) => value * 2);
 * console.log(result); // { a: 2, b: 4 }
 */ export function mapValues(object, getNewValue) {
  const result = {};
  const keys = Object.keys(object);
  for(let i = 0; i < keys.length; i++){
    const key = keys[i];
    const value = object[key];
    result[key] = getNewValue(value, key, object);
  }
  return result;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vanNyLmlvL0Blcy10b29sa2l0L2VzLXRvb2xraXQvMS4zMy4wL3NyYy9vYmplY3QvbWFwVmFsdWVzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlcyBhIG5ldyBvYmplY3Qgd2l0aCB0aGUgc2FtZSBrZXlzIGFzIHRoZSBnaXZlbiBvYmplY3QsIGJ1dCB3aXRoIHZhbHVlcyBnZW5lcmF0ZWRcbiAqIGJ5IHJ1bm5pbmcgZWFjaCBvd24gZW51bWVyYWJsZSBwcm9wZXJ0eSBvZiB0aGUgb2JqZWN0IHRocm91Z2ggdGhlIGl0ZXJhdGVlIGZ1bmN0aW9uLlxuICpcbiAqIEB0ZW1wbGF0ZSBUIC0gVGhlIHR5cGUgb2YgdGhlIG9iamVjdC5cbiAqIEB0ZW1wbGF0ZSBLIC0gVGhlIHR5cGUgb2YgdGhlIGtleXMgaW4gdGhlIG9iamVjdC5cbiAqIEB0ZW1wbGF0ZSBWIC0gVGhlIHR5cGUgb2YgdGhlIG5ldyB2YWx1ZXMgZ2VuZXJhdGVkIGJ5IHRoZSBpdGVyYXRlZSBmdW5jdGlvbi5cbiAqXG4gKiBAcGFyYW0ge1R9IG9iamVjdCAtIFRoZSBvYmplY3QgdG8gaXRlcmF0ZSBvdmVyLlxuICogQHBhcmFtIHsodmFsdWU6IFRbS10sIGtleTogSywgb2JqZWN0OiBUKSA9PiBWfSBnZXROZXdWYWx1ZSAtIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBvd24gZW51bWVyYWJsZSBwcm9wZXJ0eS5cbiAqIEByZXR1cm5zIHtSZWNvcmQ8SywgVj59IC0gUmV0dXJucyB0aGUgbmV3IG1hcHBlZCBvYmplY3QuXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIEV4YW1wbGUgdXNhZ2U6XG4gKiBjb25zdCBvYmogPSB7IGE6IDEsIGI6IDIgfTtcbiAqIGNvbnN0IHJlc3VsdCA9IG1hcFZhbHVlcyhvYmosICh2YWx1ZSkgPT4gdmFsdWUgKiAyKTtcbiAqIGNvbnNvbGUubG9nKHJlc3VsdCk7IC8vIHsgYTogMiwgYjogNCB9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtYXBWYWx1ZXM8VCBleHRlbmRzIG9iamVjdCwgSyBleHRlbmRzIGtleW9mIFQsIFY+KFxuICBvYmplY3Q6IFQsXG4gIGdldE5ld1ZhbHVlOiAodmFsdWU6IFRbS10sIGtleTogSywgb2JqZWN0OiBUKSA9PiBWXG4pOiBSZWNvcmQ8SywgVj4ge1xuICBjb25zdCByZXN1bHQgPSB7fSBhcyBSZWNvcmQ8SywgVj47XG4gIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGtleSA9IGtleXNbaV0gYXMgSztcbiAgICBjb25zdCB2YWx1ZSA9IG9iamVjdFtrZXldO1xuXG4gICAgcmVzdWx0W2tleV0gPSBnZXROZXdWYWx1ZSh2YWx1ZSwga2V5LCBvYmplY3QpO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FpQkMsR0FDRCxPQUFPLFNBQVMsVUFDZCxNQUFTLEVBQ1QsV0FBa0Q7RUFFbEQsTUFBTSxTQUFTLENBQUM7RUFDaEIsTUFBTSxPQUFPLE9BQU8sSUFBSSxDQUFDO0VBRXpCLElBQUssSUFBSSxJQUFJLEdBQUcsSUFBSSxLQUFLLE1BQU0sRUFBRSxJQUFLO0lBQ3BDLE1BQU0sTUFBTSxJQUFJLENBQUMsRUFBRTtJQUNuQixNQUFNLFFBQVEsTUFBTSxDQUFDLElBQUk7SUFFekIsTUFBTSxDQUFDLElBQUksR0FBRyxZQUFZLE9BQU8sS0FBSztFQUN4QztFQUVBLE9BQU87QUFDVCJ9
// denoCacheMetadata=15643581928370325543,4593181926946496967