/**
 * Returns the last element of an array.
 *
 * This function takes an array and returns the last element of the array.
 * If the array is empty, the function returns `undefined`.
 *
 * Unlike some implementations, this function is optimized for performance
 * by directly accessing the last index of the array.
 *
 * @template T - The type of elements in the array.
 * @param {[...T[], T]} arr - The array from which to get the last element.
 * @returns {T} The last element of the array, or `undefined` if the array is empty.
 *
 * @example
 * const arr = [1, 2, 3];
 * const lastElement = last(arr);
 * // lastElement will be 3
 *
 * const emptyArr: number[] = [];
 * const noElement = last(emptyArr);
 * // noElement will be undefined
 */
export function last<T>(arr: readonly [...T[], T]): T;

/**
 * Returns the last element of an array.
 *
 * This function takes an array and returns the last element of the array.
 * If the array is empty, the function returns `undefined`.
 *
 * Unlike some implementations, this function is optimized for performance
 * by directly accessing the last index of the array.
 *
 * @template T - The type of elements in the array.
 * @param {T[]} arr - The array from which to get the last element.
 * @returns {T | undefined} The last element of the array, or `undefined` if the array is empty.
 *
 * @example
 * const arr = [1, 2, 3];
 * const lastElement = last(arr);
 * // lastElement will be 3
 *
 * const emptyArr: number[] = [];
 * const noElement = last(emptyArr);
 * // noElement will be undefined
 */
export function last<T>(arr: readonly T[]): T | undefined;

/**
 * Returns the last element of an array.
 *
 * This function takes an array and returns the last element of the array.
 * If the array is empty, the function returns `undefined`.
 *
 * Unlike some implementations, this function is optimized for performance
 * by directly accessing the last index of the array.
 *
 * @template T - The type of elements in the array.
 * @param {T[]} arr - The array from which to get the last element.
 * @returns {T | undefined} The last element of the array, or `undefined` if the array is empty.
 *
 * @example
 * const arr = [1, 2, 3];
 * const lastElement = last(arr);
 * // lastElement will be 3
 *
 * const emptyArr: number[] = [];
 * const noElement = last(emptyArr);
 * // noElement will be undefined
 */
export function last<T>(arr: readonly T[]): T | undefined {
  return arr[arr.length - 1];
}

// denoCacheMetadata={"headers":{"content-type":"text/typescript","x-robots-tag":"noindex","server":"UploadServer","via":"1.1 google","accept-ranges":"bytes","cross-origin-resource-policy":"cross-origin","expires":"Fri, 26 Jun 2026 21:45:35 GMT","x-content-type-options":"nosniff","x-goog-stored-content-encoding":"identity","x-goog-hash":"crc32c=kT5s7g==,md5=5yRHfCLiYbGWLJxpQsYt5w==","x-goog-generation":"1741509575309636","age":"0","x-jsr-cache-status":"revalidated","etag":"\"e724477c22e261b1962c9c6942c62de7\"","x-goog-stored-content-length":"2454","last-modified":"Sun, 09 Mar 2025 08:39:35 GMT","cache-control":"public, max-age=31536000, immutable","x-guploader-uploadid":"ABgVH8_1AcqVhYl7MPc3BCBMtNHDAJeS9kuhSw8o8BKZCn0dtguPXnfcP01UZhrVItMkQS-9","access-control-expose-headers":"*","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","content-security-policy":"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';","content-length":"2454","x-goog-storage-class":"STANDARD","access-control-allow-origin":"*","x-goog-metageneration":"1","x-jsr-cache-id":"ATL","date":"Thu, 26 Jun 2025 21:45:35 GMT"},"url":"https://jsr.io/@es-toolkit/es-toolkit/1.33.0/src/array/last.ts","time":1750974334}