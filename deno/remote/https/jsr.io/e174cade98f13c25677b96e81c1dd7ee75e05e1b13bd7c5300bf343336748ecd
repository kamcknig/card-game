/**
 * Checks if the given value is not null nor undefined.
 *
 * The main use of this function is to be used with TypeScript as a type predicate.
 *
 * @template T - The type of value.
 * @param {T | null | undefined} x - The value to test if it is not null nor undefined.
 * @returns {x is T} True if the value is not null nor undefined, false otherwise.
 *
 * @example
 * // Here the type of `arr` is (number | undefined)[]
 * const arr = [1, undefined, 3];
 * // Here the type of `result` is number[]
 * const result = arr.filter(isNotNil);
 * // result will be [1, 3]
 */
export function isNotNil<T>(x: T | null | undefined): x is T {
  return x != null;
}

// denoCacheMetadata={"headers":{"x-robots-tag":"noindex","x-content-type-options":"nosniff","expires":"Fri, 26 Jun 2026 21:45:36 GMT","content-length":"662","x-jsr-cache-status":"revalidated","last-modified":"Sun, 09 Mar 2025 08:39:34 GMT","x-goog-generation":"1741509574404554","cross-origin-resource-policy":"cross-origin","via":"1.1 google","x-goog-metageneration":"1","x-goog-stored-content-encoding":"identity","x-goog-hash":"crc32c=CSQmtQ==,md5=J4bR2ONCizRoCes3mLpqmg==","content-security-policy":"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';","access-control-expose-headers":"*","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","age":"0","x-goog-storage-class":"STANDARD","etag":"\"2786d1d8e3428b346809eb3798ba6a9a\"","x-jsr-cache-id":"ATL","x-goog-stored-content-length":"662","x-guploader-uploadid":"ABgVH89ak-_VrCB_tyqlDle6pAamDZHiNr_Y2-o2PS9o6Ps645UMwy4J2-rm7iQpzdqK3rkhprsV2_s","server":"UploadServer","cache-control":"public, max-age=31536000, immutable","accept-ranges":"bytes","content-type":"text/typescript","date":"Thu, 26 Jun 2025 21:45:36 GMT","access-control-allow-origin":"*"},"url":"https://jsr.io/@es-toolkit/es-toolkit/1.33.0/src/predicate/isNotNil.ts","time":1750974334}