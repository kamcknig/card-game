import { isPlainObject } from '../predicate/isPlainObject.ts';

interface FlattenObjectOptions {
  /**
   * The delimiter to use between nested keys.
   * @default '.'
   */
  delimiter?: string;
}

/**
 * Flattens a nested object into a single level object with delimiter-separated keys.
 *
 * @param {object} object - The object to flatten.
 * @param {string} [options.delimiter='.'] - The delimiter to use between nested keys.
 * @returns {Record<string, any>} - The flattened object.
 *
 * @example
 * const nestedObject = {
 *   a: {
 *     b: {
 *       c: 1
 *     }
 *   },
 *   d: [2, 3]
 * };
 *
 * const flattened = flattenObject(nestedObject);
 * console.log(flattened);
 * // Output:
 * // {
 * //   'a.b.c': 1,
 * //   'd.0': 2,
 * //   'd.1': 3
 * // }
 */
export function flattenObject(object: object, { delimiter = '.' }: FlattenObjectOptions = {}): Record<string, any> {
  return flattenObjectImpl(object, '', delimiter);
}

function flattenObjectImpl(object: object, prefix = '', delimiter = '.'): Record<string, any> {
  const result: Record<string, any> = {};
  const keys = Object.keys(object);

  for (let i = 0; i < keys.length; i++) {
    const key = keys[i];
    const value = (object as any)[key];

    const prefixedKey = prefix ? `${prefix}${delimiter}${key}` : key;

    if (isPlainObject(value) && Object.keys(value).length > 0) {
      Object.assign(result, flattenObjectImpl(value, prefixedKey, delimiter));
      continue;
    }

    if (Array.isArray(value)) {
      Object.assign(result, flattenObjectImpl(value, prefixedKey, delimiter));
      continue;
    }

    result[prefixedKey] = value;
  }

  return result;
}

// denoCacheMetadata={"headers":{"age":"0","x-goog-generation":"1741509574532134","x-jsr-cache-id":"ATL","x-robots-tag":"noindex","access-control-allow-origin":"*","cache-control":"public, max-age=31536000, immutable","x-jsr-cache-status":"revalidated","cross-origin-resource-policy":"cross-origin","x-guploader-uploadid":"ABgVH8_LQrIpMEEKd362nW9J1dBSiZC1c9cHrmgWsRCBTy0oMnxEUcAMa7oZwU2do77dAaWh","x-content-type-options":"nosniff","x-goog-metageneration":"1","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","content-security-policy":"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';","etag":"\"8caa58d530a08c3eab4eaba478f251f6\"","access-control-expose-headers":"*","content-type":"text/typescript","server":"UploadServer","expires":"Fri, 26 Jun 2026 21:45:36 GMT","x-goog-stored-content-encoding":"identity","date":"Thu, 26 Jun 2025 21:45:36 GMT","content-length":"1655","x-goog-hash":"crc32c=E8FZOQ==,md5=jKpY1TCgjD6rTqukePJR9g==","x-goog-storage-class":"STANDARD","last-modified":"Sun, 09 Mar 2025 08:39:34 GMT","x-goog-stored-content-length":"1655","accept-ranges":"bytes","via":"1.1 google"},"url":"https://jsr.io/@es-toolkit/es-toolkit/1.33.0/src/object/flattenObject.ts","time":1750974334}