/**
 * Combines two arrays, one of property names and one of corresponding values, into a single object.
 *
 * This function takes two arrays: one containing property names and another containing corresponding values.
 * It returns a new object where the property names from the first array are keys, and the corresponding elements
 * from the second array are values. If the `keys` array is longer than the `values` array, the remaining keys will
 * have `undefined` as their values.
 *
 * @template P - The type of elements in the array.
 * @template V - The type of elements in the array.
 * @param {P[]} keys - An array of property names.
 * @param {V[]} values - An array of values corresponding to the property names.
 * @returns {Record<P, V>} - A new object composed of the given property names and values.
 *
 * @example
 * const keys = ['a', 'b', 'c'];
 * const values = [1, 2, 3];
 * const result = zipObject(keys, values);
 * // result will be { a: 1, b: 2, c: 3 }
 *
 * const keys2 = ['a', 'b', 'c'];
 * const values2 = [1, 2];
 * const result2 = zipObject(keys2, values2);
 * // result2 will be { a: 1, b: 2, c: undefined }
 *
 * const keys2 = ['a', 'b'];
 * const values2 = [1, 2, 3];
 * const result2 = zipObject(keys2, values2);
 * // result2 will be { a: 1, b: 2 }
 */
export function zipObject<P extends PropertyKey, V>(keys: readonly P[], values: readonly V[]): Record<P, V> {
  const result = {} as Record<P, V>;

  for (let i = 0; i < keys.length; i++) {
    result[keys[i]] = values[i];
  }

  return result;
}

// denoCacheMetadata={"headers":{"x-goog-storage-class":"STANDARD","expires":"Fri, 26 Jun 2026 21:45:35 GMT","content-length":"1534","access-control-expose-headers":"*","x-robots-tag":"noindex","x-goog-stored-content-length":"1534","x-goog-stored-content-encoding":"identity","x-goog-generation":"1741509575112203","via":"1.1 google","age":"0","accept-ranges":"bytes","x-goog-hash":"crc32c=YaEkkA==,md5=3m3InPbOyszWnv0au8/56Q==","server":"UploadServer","content-security-policy":"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';","x-jsr-cache-id":"ATL","x-guploader-uploadid":"ABgVH8_NajhpC2MumemMvEowcDgtTqnqO1hbL-CpM8QsQ-QUwDVG9_wf-lJRgV_xEFZQqn89UyplVLE","cache-control":"public, max-age=31536000, immutable","content-type":"text/typescript","access-control-allow-origin":"*","cross-origin-resource-policy":"cross-origin","x-content-type-options":"nosniff","last-modified":"Sun, 09 Mar 2025 08:39:35 GMT","etag":"\"de6dc89cf6cecaccd69efd1abbcff9e9\"","x-jsr-cache-status":"revalidated","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","x-goog-metageneration":"1","date":"Thu, 26 Jun 2025 21:45:35 GMT"},"url":"https://jsr.io/@es-toolkit/es-toolkit/1.33.0/src/array/zipObject.ts","time":1750974334}