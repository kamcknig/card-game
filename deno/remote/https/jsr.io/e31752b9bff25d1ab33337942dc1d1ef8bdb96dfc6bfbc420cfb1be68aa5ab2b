import { uniqWith } from './uniqWith.ts';

/**
 * Creates an array of unique values from two given arrays based on a custom equality function.
 *
 * This function takes two arrays and a custom equality function, merges the arrays, and returns
 * a new array containing only the unique values as determined by the custom equality function.
 *
 * @template T - The type of elements in the array.
 * @param {T[]} arr1 - The first array to merge and filter for unique values.
 * @param {T[]} arr2 - The second array to merge and filter for unique values.
 * @param {(item1: T, item2: T) => boolean} areItemsEqual - A custom function to determine if two elements are equal.
 * It takes two arguments and returns `true` if the elements are considered equal, and `false` otherwise.
 * @returns {T[]} A new array of unique values based on the custom equality function.
 *
 * @example
 * const array1 = [{ id: 1 }, { id: 2 }];
 * const array2 = [{ id: 2 }, { id: 3 }];
 * const areItemsEqual = (a, b) => a.id === b.id;
 * const result = unionWith(array1, array2, areItemsEqual);
 * // result will be [{ id: 1 }, { id: 2 }, { id: 3 }] since { id: 2 } is considered equal in both arrays
 */
export function unionWith<T>(
  arr1: readonly T[],
  arr2: readonly T[],
  areItemsEqual: (item1: T, item2: T) => boolean
): T[] {
  return uniqWith(arr1.concat(arr2), areItemsEqual);
}

// denoCacheMetadata={"headers":{"cross-origin-resource-policy":"cross-origin","server":"UploadServer","via":"1.1 google","cache-control":"public, max-age=31536000, immutable","x-goog-stored-content-length":"1367","age":"0","x-jsr-cache-id":"ATL","x-robots-tag":"noindex","date":"Thu, 26 Jun 2025 21:45:35 GMT","x-goog-stored-content-encoding":"identity","etag":"\"25124110c497ed2ae9431e1e464d8c87\"","content-security-policy":"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';","x-jsr-cache-status":"revalidated","access-control-expose-headers":"*","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","x-guploader-uploadid":"ABgVH896cpvFSvau_n-EPAyWjXtu_kBay_P7S0JogaZkCjSasgwkDLO84yIhmxrZzjWiZ4G_vXfJKGM","x-goog-hash":"crc32c=ygL+7w==,md5=JRJBEMSX7SrpQx4eRk2Mhw==","content-length":"1367","x-content-type-options":"nosniff","content-type":"text/typescript","expires":"Fri, 26 Jun 2026 21:45:35 GMT","x-goog-storage-class":"STANDARD","accept-ranges":"bytes","last-modified":"Sun, 09 Mar 2025 08:39:35 GMT","x-goog-generation":"1741509575317850","access-control-allow-origin":"*","x-goog-metageneration":"1"},"url":"https://jsr.io/@es-toolkit/es-toolkit/1.33.0/src/array/unionWith.ts","time":1750974334}