/**
 * Count the occurrences of each item in an array
 * based on a transformation function.
 *
 * This function takes an array and a transformation function
 * that converts each item in the array to a key. It then
 * counts the occurrences of each transformed item and returns
 * an object with the transformed items as keys and the counts
 * as values.
 *
 * @template T - The type of the items in the input array.
 * @template K - The type of keys.
 * @param {T[]} arr - The input array to count occurrences.
 * @param {(item: T) => K} mapper - The transformation function that maps each item to a key.
 * @returns {Record<K, number>} An object containing the transformed items as keys and the
 * counts as values.
 *
 * @example
 * const array = ['a', 'b', 'c', 'a', 'b', 'a'];
 * const result = countBy(array, x => x);
 * // result will be { a: 3, b: 2, c: 1 }
 *
 * @example
 * const array = [1, 2, 3, 4, 5];
 * const result = countBy(array, item => item % 2 === 0 ? 'even' : 'odd');
 * // result will be { odd: 3, even: 2 }
 */
export function countBy<T, K extends PropertyKey>(arr: readonly T[], mapper: (item: T) => K): Record<K, number> {
  const result = {} as Record<K, number>;

  for (let i = 0; i < arr.length; i++) {
    const item = arr[i];
    const key = mapper(item);

    result[key] = (result[key] ?? 0) + 1;
  }

  return result;
}

// denoCacheMetadata={"headers":{"x-goog-stored-content-length":"1356","x-goog-stored-content-encoding":"identity","x-goog-metageneration":"1","date":"Thu, 26 Jun 2025 21:45:35 GMT","etag":"\"e9cf317f5b8f6235cc4f1b9baff417a3\"","age":"0","x-robots-tag":"noindex","access-control-expose-headers":"*","x-content-type-options":"nosniff","cache-control":"public, max-age=31536000, immutable","x-guploader-uploadid":"ABgVH8-yx8nAZrPXZWXFAQmUVJ0tIySn0C3j-m2jU_3pLuYUsCvN9Y8ed6oz2YNpwG8xUDVybnazZUE","x-jsr-cache-status":"revalidated","expires":"Fri, 26 Jun 2026 21:45:35 GMT","last-modified":"Sun, 09 Mar 2025 08:39:35 GMT","x-goog-hash":"crc32c=FfFbqA==,md5=6c8xf1uPYjXMTxubr/QXow==","x-jsr-cache-id":"ATL","content-type":"text/typescript","via":"1.1 google","server":"UploadServer","content-security-policy":"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';","access-control-allow-origin":"*","cross-origin-resource-policy":"cross-origin","x-goog-storage-class":"STANDARD","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","x-goog-generation":"1741509575256334","content-length":"1356","accept-ranges":"bytes"},"url":"https://jsr.io/@es-toolkit/es-toolkit/1.33.0/src/array/countBy.ts","time":1750974334}