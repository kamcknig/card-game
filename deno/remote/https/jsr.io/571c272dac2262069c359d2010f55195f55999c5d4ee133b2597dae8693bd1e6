import { clamp as clampToolkit } from '../../math/clamp.ts';

/**
 * Clamps a number within the inclusive upper bound.
 *
 * This function takes a number and a maximum bound, and returns the number clamped within the specified upper bound.
 * If only one bound is provided, it returns the minimum of the value and the bound.
 *
 * @param {number} value - The number to clamp.
 * @param {number} maximum - The maximum bound to clamp the number.
 * @returns {number} The clamped number within the specified upper bound.
 *
 * @example
 * const result1 = clamp(10, 5); // result1 will be 5, as 10 is clamped to the bound 5
 */
export function clamp(value: number, maximum: number): number;

/**
 * Clamps a number within the inclusive lower and upper bounds.
 *
 * This function takes a number and two bounds, and returns the number clamped within the specified bounds.
 *
 * @param {number} value - The number to clamp.
 * @param {number} minimum - The minimum bound to clamp the number.
 * @param {number} maximum - The maximum bound to clamp the number.
 * @returns {number} The clamped number within the specified bounds.
 *
 * @example
 * const result2 = clamp(10, 5, 15); // result2 will be 10, as it is within the bounds 5 and 15
 * const result3 = clamp(2, 5, 15); // result3 will be 5, as 2 is clamped to the lower bound 5
 * const result4 = clamp(20, 5, 15); // result4 will be 15, as 20 is clamped to the upper bound 15
 */
export function clamp(value: number, minimum: number, maximum: number): number;

/**
 * Clamps a number within the specified bounds.
 *
 * This function takes a number and one or two bounds, and returns the number clamped within the specified bounds.
 * If only one bound is provided, it returns the minimum of the value and the bound.
 *
 * @param {number} value - The number to clamp.
 * @param {number} bound1 - The minimum bound to clamp the number, or the maximum bound if bound2 is not provided.
 * @param {number} [bound2] - The maximum bound to clamp the number. If not provided, the function will only consider bound1 as the upper limit.
 * @returns {number} The clamped number within the specified bounds.
 *
 * @example
 * const result1 = clamp(10, 5); // result1 will be 5, as 10 is clamped to the bound 5
 * const result2 = clamp(10, 5, 15); // result2 will be 10, as it is within the bounds 5 and 15
 * const result3 = clamp(2, 5, 15); // result3 will be 5, as 2 is clamped to the lower bound 5
 * const result4 = clamp(20, 5, 15); // result4 will be 15, as 20 is clamped to the upper bound 15
 */
export function clamp(value: number, bound1: number, bound2?: number): number {
  if (Number.isNaN(bound1)) {
    bound1 = 0;
  }

  if (Number.isNaN(bound2)) {
    bound2 = 0;
  }

  return clampToolkit(value, bound1, bound2!);
}

// denoCacheMetadata={"headers":{"age":"0","etag":"\"34275fad83a2d747e29e77d089edca99\"","x-goog-stored-content-encoding":"identity","date":"Thu, 26 Jun 2025 21:45:35 GMT","x-jsr-cache-status":"revalidated","x-goog-metageneration":"1","x-goog-hash":"crc32c=Ta9NcA==,md5=NCdfrYOi10finnfQie3KmQ==","cache-control":"public, max-age=31536000, immutable","last-modified":"Sun, 09 Mar 2025 08:39:35 GMT","content-type":"text/typescript","access-control-allow-origin":"*","access-control-expose-headers":"*","x-goog-generation":"1741509575317996","expires":"Fri, 26 Jun 2026 21:45:35 GMT","cross-origin-resource-policy":"cross-origin","accept-ranges":"bytes","x-content-type-options":"nosniff","x-guploader-uploadid":"ABgVH8911kazcQ-b0QGdDrhZa0NJS5npa3cMVonhp7Ywcq08nQEUf2bJXWW5nqnF6B8UH5lIQTUPOs0","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","server":"UploadServer","x-robots-tag":"noindex","x-goog-storage-class":"STANDARD","via":"1.1 google","x-goog-stored-content-length":"2775","content-length":"2775","x-jsr-cache-id":"ATL","content-security-policy":"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';"},"url":"https://jsr.io/@es-toolkit/es-toolkit/1.33.0/src/compat/math/clamp.ts","time":1750974334}