import { toArray } from '../_internal/toArray.ts';
import { property } from '../object/property.ts';
import { matches } from '../predicate/matches.ts';
import { matchesProperty } from '../predicate/matchesProperty.ts';

/**
 * Iterates through an array in reverse order and returns the index of the first item that matches the given predicate function.
 *
 * @template T
 * @param {ArrayLike<T> | null | undefined} arr - The array to search through.
 * @param {(item: T, index: number, arr: T[]) => unknown} doesMatch - A function that takes an item, its index, and the array, and returns a truthy value if the item matches the criteria.
 * @param {number} [fromIndex=arr.length - 1] - The index to start the search from, defaults to the last index of the array.
 * @returns {number} - The index of the first item that matches the predicate, or `undefined` if no match is found.
 *
 * @example
 * // Using a predicate function
 * const items = [1, 2, 3, 4, 5];
 * const result = findLastIndex(items, (item) => item > 3)
 * console.log(result); // 4
 */
export function findLastIndex<T>(
  arr: ArrayLike<T> | null | undefined,
  doesMatch: (item: T, index: number, arr: readonly T[]) => unknown,
  fromIndex?: number
): number;

/**
 * Finds the index of the first item in an array that matches the given partial object.
 *
 * @template T
 * @param {ArrayLike<T> | null | undefined} arr - The array to search through.
 * @param {Partial<T>} doesMatch - A partial object that specifies the properties to match.
 * @param {number} [fromIndex=arr.length - 1] - The index to start the search from, defaults to the last index of the array.
 * @returns {number} - The index of the first item that matches the partial object, or `undefined` if no match is found.
 *
 * @example
 * // Using a partial object
 * const items = [{ id: 1, name: 'Alice' }, { id: 2, name: 'Bob' }];
 * const result = findLastIndex(items, { name: 'Bob' });
 * console.log(result); // 1
 */
export function findLastIndex<T>(
  arr: ArrayLike<T> | null | undefined,
  doesMatch: Partial<T>,
  fromIndex?: number
): number;

/**
 * Finds the index of the first item in an array that matches a property with a specific value.
 *
 * @template T
 * @param {ArrayLike<T> | null | undefined} arr - The array to search through.
 * @param {[keyof T, unknown]} doesMatchProperty - An array where the first element is the property key and the second element is the value to match.
 * @param {number} [fromIndex=arr.length - 1] - The index to start the search from, defaults to the last index of the array.
 * @returns {number} - The index of the first item that has the specified property value, or `undefined` if no match is found.
 *
 * @example
 * // Using a property-value pair
 * const items = [{ id: 1, name: 'Alice' }, { id: 2, name: 'Bob' }];
 * const result = findLastIndex(items, ['name', 'Alice']);
 * console.log(result); // 0
 */
export function findLastIndex<T>(
  arr: ArrayLike<T> | null | undefined,
  doesMatchProperty: [keyof T, unknown],
  fromIndex?: number
): number;

/**
 * Finds the index of the first item in an array that has a specific property, where the property name is provided as a PropertyKey.
 *
 * @template T
 * @param {ArrayLike<T> | null | undefined} arr - The array to search through.
 * @param {PropertyKey} propertyToCheck - The property name to check.
 * @param {number} [fromIndex=arr.length - 1] - The index to start the search from, defaults to the last index of the array.
 * @returns {number} - The index of the first item that has the specified property, or `undefined` if no match is found.
 *
 * @example
 * // Using a property name
 * const items = [{ id: 1, name: 'Alice' }, { id: 2, name: 'Bob' }];
 * const result = findLastIndex(items, 'name');
 * console.log(result); // 1
 */
export function findLastIndex<T>(
  arr: ArrayLike<T> | null | undefined,
  propertyToCheck: PropertyKey,
  fromIndex?: number
): number;

/**
 * Finds the index of the first item in an array that has a specific property, where the property name is provided as a PropertyKey.
 *
 * @template T
 * @param {ArrayLike<T> | null | undefined} arr - The array to search through.
 * @param {((item: T, index: number, arr: any) => unknown) | Partial<T> | [keyof T, unknown] | PropertyKey} doesMatch - The property name to check.
 * @param {number} [fromIndex=arr.length - 1] - The index to start the search from, defaults to the last index of the array.
 * @returns {number} - The index of the first item that has the specified property, or `undefined` if no match is found.
 *
 * @example
 * // Using a property name
 * const items = [{ id: 1, name: 'Alice' }, { id: 2, name: 'Bob' }];
 * const result = findLastIndex(items, 'name');
 * console.log(result); // 1
 */
export function findLastIndex<T>(
  arr: ArrayLike<T> | null | undefined,
  doesMatch: ((item: T, index: number, arr: any) => unknown) | Partial<T> | [keyof T, unknown] | PropertyKey,
  fromIndex: number = arr ? arr.length - 1 : 0
): number {
  if (!arr) {
    return -1;
  }
  if (fromIndex < 0) {
    fromIndex = Math.max(arr.length + fromIndex, 0);
  } else {
    fromIndex = Math.min(fromIndex, arr.length - 1);
  }

  const subArray = toArray(arr).slice(0, fromIndex + 1);

  switch (typeof doesMatch) {
    case 'function': {
      return subArray.findLastIndex(doesMatch);
    }
    case 'object': {
      if (Array.isArray(doesMatch) && doesMatch.length === 2) {
        const key = doesMatch[0];
        const value = doesMatch[1];

        return subArray.findLastIndex(matchesProperty(key, value));
      } else {
        return subArray.findLastIndex(matches(doesMatch));
      }
    }
    case 'number':
    case 'symbol':
    case 'string': {
      return subArray.findLastIndex(property(doesMatch));
    }
  }
}

// denoCacheMetadata={"headers":{"content-security-policy":"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';","x-jsr-cache-id":"ATL","server":"UploadServer","x-robots-tag":"noindex","access-control-allow-origin":"*","x-goog-metageneration":"1","x-goog-stored-content-length":"5778","date":"Thu, 26 Jun 2025 21:45:35 GMT","access-control-expose-headers":"*","x-goog-stored-content-encoding":"identity","cross-origin-resource-policy":"cross-origin","etag":"\"2540677c38a90150d4ba075e37c5f924\"","cache-control":"public, max-age=31536000, immutable","x-content-type-options":"nosniff","x-guploader-uploadid":"ABgVH8-HaJm7QAf_g9WpjghB9K2qvNb7Trjs9xLsizNzCYHstnIY95Dp2MXE5IMnPsoXqZ6d","accept-ranges":"bytes","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","content-type":"text/typescript","expires":"Fri, 26 Jun 2026 21:45:35 GMT","via":"1.1 google","age":"0","x-jsr-cache-status":"revalidated","x-goog-hash":"crc32c=FWwa/A==,md5=JUBnfDipAVDUugdeN8X5JA==","content-length":"5778","x-goog-generation":"1741509574710956","x-goog-storage-class":"STANDARD","last-modified":"Sun, 09 Mar 2025 08:39:34 GMT"},"url":"https://jsr.io/@es-toolkit/es-toolkit/1.33.0/src/compat/array/findLastIndex.ts","time":1750974334}