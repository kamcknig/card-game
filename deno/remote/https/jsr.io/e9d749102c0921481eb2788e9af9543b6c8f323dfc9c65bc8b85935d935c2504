/**
 * Attempts to execute a function with the provided arguments.
 * If the function throws an error, it catches the error and returns it.
 * If the caught error is not an instance of Error, it wraps it in a new Error.
 *
 * @param {F} func - The function to be executed.
 * @param {...Parameters<F>} args - The arguments to pass to the function.
 * @returns {ReturnType<F> | Error} The return value of the function if successful, or an Error if an exception is thrown.
 *
 * @template F - The type of the function being attempted.
 *
 * @example
 * // Example 1: Successful execution
 * const result = attempt((x, y) => x + y, 2, 3);
 * console.log(result); // Output: 5
 *
 * @example
 * // Example 2: Function throws an error
 * const errorResult = attempt(() => {
 *   throw new Error("Something went wrong");
 * });
 * console.log(errorResult); // Output: Error: Something went wrong
 *
 * @example
 * // Example 3: Non-Error thrown
 * const nonErrorResult = attempt(() => {
 *   throw "This is a string error";
 * });
 * console.log(nonErrorResult); // Output: Error: This is a string error
 */
export function attempt<F extends (...args: any[]) => any>(func: F, ...args: Parameters<F>): ReturnType<F> | Error {
  try {
    return func(...args);
  } catch (e: any) {
    return e instanceof Error ? e : new Error(e);
  }
}

// denoCacheMetadata={"headers":{"x-content-type-options":"nosniff","x-goog-hash":"crc32c=C80/MQ==,md5=ehnlQBgX5igdR3mAsXq6Bg==","accept-ranges":"bytes","etag":"\"7a19e5401817e6281d477980b17aba06\"","date":"Thu, 26 Jun 2025 21:45:35 GMT","content-type":"text/typescript","last-modified":"Sun, 09 Mar 2025 08:39:35 GMT","x-goog-stored-content-encoding":"identity","server":"UploadServer","x-goog-storage-class":"STANDARD","via":"1.1 google","expires":"Fri, 26 Jun 2026 21:45:35 GMT","content-security-policy":"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';","x-goog-stored-content-length":"1330","x-goog-metageneration":"1","cache-control":"public, max-age=31536000, immutable","x-jsr-cache-id":"ATL","x-jsr-cache-status":"revalidated","x-goog-generation":"1741509575880061","access-control-allow-origin":"*","access-control-expose-headers":"*","cross-origin-resource-policy":"cross-origin","x-robots-tag":"noindex","age":"0","x-guploader-uploadid":"ABgVH89u5eBF2mx59JtHtAjU05_05FXbK95D2EIH6DGRmap2FNWeBsTrOk3wSfbROIV5At8CviPH8w4","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","content-length":"1330"},"url":"https://jsr.io/@es-toolkit/es-toolkit/1.33.0/src/compat/function/attempt.ts","time":1750974334}